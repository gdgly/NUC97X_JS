

#ifndef EFLASH_Meter_H
#define EFLASH_Meter_H




#define ADDR_MeterParameter_EFLASH_Start     ADDR_Meter_EFLASH_Start

//电表设置参数------------------------------------------------------------------------------------
//通信参数----------------------------------------------------------------------------------------
#define ADDR_04000401     (ADDR_MeterParameter_EFLASH_Start)
//6BYTE 通信地址
//6BYTE 表号
//32BYTE 资产管理编码（ASCII码）
//6BYTE 额定电压（ASCII码）
//6BYTE 额定电流/基本电流（ASCII码）
//6BYTE 最大电流（ASCII码）
//4BYTE 有功准确度等级（ASCII码）
//4BYTE 无功准确度等级（ASCII码）
//3BYTE 电表有功常数
//3BYTE 电表无功常数
//10BYTE 电表型号（ASCII码）
//10BYTE 生产日期（ASCII码）
//16BYTE 协议版本号（ASCII码）(协议版本号的格式：“DL/T645-2007-12”，后两位表示协议备案年份)
#define ADDR_04000701     ADDR_04000401+112
//1BYTE 调制型红外光口通信速率特征字 
//1BYTE 接触式红外光口通信速率特征字 
//1BYTE 通信口 1 通信速率特征字
//1BYTE 通信口 2 通信速率特征字 
//1BYTE 通信口 3 通信速率特征字
#define ADDR_04000C01     ADDR_04000701+5
//4BYTE MESAM密钥状态字
//4BYTE 空
//3BYTE 2级密码
//1BYTE 2级密码错误次数
//4BYTE 空
//3BYTE 4级密码
//1BYTE 4级密码错误次数
//3BYTE 
//1BYTE 
//3BYTE 
//1BYTE 




//通信参数结束------------------------------------------------------------------------------------


//智能表用第1类设置数据
#define ADDR_MeterSet1_Start     (ADDR_04000C01+28)//智能表1类设置数据开始
#define ADDR_04000108_COPY     ADDR_MeterSet1_Start//两套费率电价切换时间
//5BYTE YYMMDDhhmm(BCD)
//1BYTE 0=切换时间未用,1=已切换
#define ADDR_04001001_COPY     ADDR_04000108_COPY+6//报警金额限值
//4BYTE 报警金额1限值(NNNNNN.NN元)(BCD)
//4BYTE 报警金额2限值(NNNNNN.NN元)(BCD)
#define ADDR_04000306_COPY     ADDR_04001001_COPY+8//互感器变比
//3BYTE 电流互感器变比(BCD)
//3BYTE 电压互感器变比(BCD)
#define ADDR_0400040E_COPY     ADDR_04000306_COPY+6//客户编号
//6BYTE(BCD)
#define ADDR_04050101_COPY     ADDR_0400040E_COPY+6//当前套费率1-32
//4*32BYTE(NNNN.NNNN元)(BCD)
#define ADDR_04050201_COPY     ADDR_04050101_COPY+(4*32)//备用费率1-32
//4*32BYTE(NNNN.NNNN元)(BCD)
#define ADDR_040604FF_COPY     ADDR_04050201_COPY+(4*32)//当前套阶梯值
//4*6BYTE(NNNNNN.NNkWh)(BCD) 阶梯值1-套阶梯值6
//4*7BYTE(NNNN.NNNN元)(BCD) 阶梯电价1-阶梯电价7
//3*4BYTE(MMDDhh月日时)(BCD) 年第1结算日-年第4结算日
#define ADDR_040605FF_COPY     ADDR_040604FF_COPY+(4*MeterMaxLadder)+(4*(MeterMaxLadder+1))+(3*4)//备用套阶梯值
//4*6BYTE(NNNNNN.NNkWh)(BCD) 阶梯值1-套阶梯值6
//4*7BYTE(NNNN.NNNN元)(BCD) 阶梯电价1-阶梯电价7
//3*4BYTE(MMDDhh月日时)(BCD) 年第1结算日-年第4结算日
#define ADDR_07000101_COPY     ADDR_040605FF_COPY+(4*MeterMaxLadder)+(4*(MeterMaxLadder+1))+(3*4)//身份认证有效时长
//2BYTE 分(BCD)
#define ADDR_MeterSet1_End     (ADDR_07000101_COPY+2)//智能表1类设置数据结束


//智能表用第2类设置数据
#define ADDR_MeterSet2_Start     ADDR_MeterSet1_End//智能表2类设置数据开始
#define ADDR_METER07_CTRL_FLASH     ADDR_MeterSet2_Start//两套使用状态
//1BYTE 保留
//1BYTE 两套时区表切换状态0=1套,1=2套
//1BYTE 两套日时段表切换态0=1套,1=2套
//1BYTE 两套梯度切换状态0=1套,1=2套
//1BYTE 两套费率电价切换0=1套,1=2套
//1BYTE 保留
#define ADDR_04000106     ADDR_METER07_CTRL_FLASH+6//上紧接ADDR_METER07_CTRL_FLASH不分开,将1次共同写入
//5BYTE YYMMDDhhmm 两套时区表切换时间(BCD)
//5BYTE YYMMDDhhmm 两套日时段表切换时间(BCD)
//5BYTE YYMMDDhhmm 两套梯度切换时间(BCD)
#define ADDR_04000201     ADDR_04000106+15
//1BYTE 年时区数p≤14
//1BYTE 日时段表数q≤8
//1BYTE 日时段数（每日切换数）m≤14
//1BYTE 费率数k≤63
//2BYTE 公共假日数n≤254
//1BYTE 谐波分析次数
//1BYTE 梯度数
#define ADDR_04000801     ADDR_04000201+8
//1BYTE 周休日状态字
//1BYTE 周休日采用的日时段表号
#define ADDR_04000B01     ADDR_04000801+2
//2BYTE 每月第 1 结算日(日时)
//2BYTE 每月第 2 结算日(日时)
//2BYTE 每月第 3 结算日(日时)
#define ADDR_04001004     ADDR_04000B01+6
//4BYTE	元 囤积金额限值(NNNNNN.NN)
//4BYTE	元 合闸允许金额限值(NNNNNN.NN)
#define ADDR_04010000     ADDR_04001004+8
//第一套时区表数据：
//3BYTE 第 1 时区起始日期及日时段表号(月日时段表号)
//...
//3BYTE 第 14 时区起始日期及日时段表号(月日时段表号)
#define ADDR_04010001     ADDR_04010000+42
//第一套第 1 日时段表数据：
//3BYTE 第 1 时段起始时间及费率号(时分费率号)
//...
//3BYTE 第 14 时段起始时间及费率号(时分费率号)
#define ADDR_04010002     ADDR_04010001+42
//第一套第 2 日时段表数据：
//3BYTE 第 1 时段起始时间及费率号(时分费率号)
//...
//3BYTE 第 14 时段起始时间及费率号(时分费率号)
#define ADDR_04010003     ADDR_04010002+42
//第一套第 3 日时段表数据：
//3BYTE 第 1 时段起始时间及费率号(时分费率号)
//...
//3BYTE 第 14 时段起始时间及费率号(时分费率号)
#define ADDR_04010004     ADDR_04010003+42
//第一套第 4 日时段表数据：
//3BYTE 第 1 时段起始时间及费率号(时分费率号)
//...
//3BYTE 第 14 时段起始时间及费率号(时分费率号)
#define ADDR_04010005     ADDR_04010004+42
//第一套第 5 日时段表数据：
//3BYTE 第 1 时段起始时间及费率号(时分费率号)
//...
//3BYTE 第 14 时段起始时间及费率号(时分费率号)
#define ADDR_04010006     ADDR_04010005+42
//第一套第 6 日时段表数据：
//3BYTE 第 1 时段起始时间及费率号(时分费率号)
//...
//3BYTE 第 14 时段起始时间及费率号(时分费率号)
#define ADDR_04010007     ADDR_04010006+42
//第一套第 7 日时段表数据：
//3BYTE 第 1 时段起始时间及费率号(时分费率号)
//...
//3BYTE 第 14 时段起始时间及费率号(时分费率号)
#define ADDR_04010008     ADDR_04010007+42
//第一套第 8 日时段表数据：
//3BYTE 第 1 时段起始时间及费率号(时分费率号)
//...
//3BYTE 第 14 时段起始时间及费率号(时分费率号)
#define ADDR_04020000     ADDR_04010008+42
//第二套时区表数据：
//3BYTE 第 1 时区起始日期及日时段表号(月日时段表号)
//...
//3BYTE 第 14 时区起始日期及日时段表号(月日时段表号)
#define ADDR_04020001     ADDR_04020000+42
//第二套第 1 日时段表数据：
//3BYTE 第 1 时段起始时间及费率号(时分费率号)
//...
//3BYTE 第 14 时段起始时间及费率号(时分费率号)
#define ADDR_04020002     ADDR_04020001+42
//第二套第 2 日时段表数据：
//3BYTE 第 1 时段起始时间及费率号(时分费率号)
//...
//3BYTE 第 14 时段起始时间及费率号(时分费率号)
#define ADDR_04020003     ADDR_04020002+42
//第二套第 3 日时段表数据：
//3BYTE 第 1 时段起始时间及费率号(时分费率号)
//...
//3BYTE 第 14 时段起始时间及费率号(时分费率号)
#define ADDR_04020004     ADDR_04020003+42
//第二套第 4 日时段表数据：
//3BYTE 第 1 时段起始时间及费率号(时分费率号)
//...
//3BYTE 第 14 时段起始时间及费率号(时分费率号)
#define ADDR_04020005     ADDR_04020004+42
//第二套第 5 日时段表数据：
//3BYTE 第 1 时段起始时间及费率号(时分费率号)
//...
//3BYTE 第 14 时段起始时间及费率号(时分费率号)
#define ADDR_04020006     ADDR_04020005+42
//第二套第 6 日时段表数据：
//3BYTE 第 1 时段起始时间及费率号(时分费率号)
//...
//3BYTE 第 14 时段起始时间及费率号(时分费率号)
#define ADDR_04020007     ADDR_04020006+42
//第二套第 7 日时段表数据：
//3BYTE 第 1 时段起始时间及费率号(时分费率号)
//...
//3BYTE 第 14 时段起始时间及费率号(时分费率号)
#define ADDR_04020008     ADDR_04020007+42
//第二套第 8 日时段表数据：
//3BYTE 第 1 时段起始时间及费率号(时分费率号)
//...
//3BYTE 第 14 时段起始时间及费率号(时分费率号)
#define ADDR_04030001     ADDR_04020008+42
//4BYTE 第 1 公共假日日期及日时段表号(年月日时段表号)
//...
//4BYTE 第 254 公共假日日期及日时段表号(年月日时段表号)

/*
#define ADDR_04060001     ADDR_04030001+(4*254)
//4BYTE KWH 第一套第1阶梯值NNNNNN.NN kwh
//4BYTE KWH 第一套第2阶梯值NNNNNN.NN kwh
//…
//4BYTE KWH 第一套第N阶梯值NNNNNN.NN kwh
#define ADDR_04060101     ADDR_04060001+(4*MeterMaxLadder)
//4BYTE 元 第一套阶梯电价1 NNNN.NNNN元
//4BYTE 元 第一套阶梯电价2 NNNN.NNNN元
//…
//4BYTE 元 第一套阶梯电价N+1 NNNN.NNNN元
#define ADDR_04060201     ADDR_04060101+(4*(MeterMaxLadder+1))
//4BYTE KWH 第二套第1阶梯值NNNNNN.NN kwh
//4BYTE KWH 第二套第2阶梯值NNNNNN.NN kwh
//…
//4BYTE KWH 第二套第N阶梯值NNNNNN.NN kwh
#define ADDR_04060301     ADDR_04060201+(4*MeterMaxLadder)
//4BYTE 元 第二套阶梯电价1 NNNN.NNNN元
//4BYTE 元 第二套阶梯电价2 NNNN.NNNN元
//…
//4BYTE 元 第二套阶梯电价N+1 NNNN.NNNN元
#define ADDR_MeterSet2_End     (ADDR_04060301+(4*(MeterMaxLadder+1)))//智能表2类设置数据结束
*/
#define ADDR_MeterSet2_End     (ADDR_04030001+(4*254))//智能表2类设置数据结束

//智能表用第3类设置数据
#define ADDR_MeterSet3_Start     ADDR_MeterSet2_End//智能表2类设置数据开始
#define ADDR_04001003     ADDR_MeterSet3_Start
//4BYTE 透支金额限值(NNNNNN.NN)
#define ADDR_04000103     ADDR_04001003+4
//1BYTE 最大需量周期(分)
//1BYTE 滑差时间(分)
//2BYTE 校表脉冲宽度(MS)
#define ADDR_04000301     ADDR_04000103+4
//1BYTE 自动循环显示屏数
//1BYTE 每屏显示时间(秒)
//1BYTE 显示电能小数位数
//1BYTE 显示功率（最大需量）小数位数
//1BYTE 按键循环显示屏数
#define ADDR_04000601     ADDR_04000301+5
//1BYTE 有功组合方式特征字  
//1BYTE 无功组合方式1特征字
//1BYTE 无功组合方式2特征字
#define ADDR_04000901     ADDR_04000601+3
//1BYTE 负荷记录模式字
//1BYTE 定时冻结数据模式字
//1BYTE 瞬时冻结数据模式字
//1BYTE 约定冻结数据模式字
//1BYTE 整点冻结数据模式字
//1BYTE 日冻结数据模式字
#define ADDR_04000A01     ADDR_04000901+6
//4BYTE 负荷记录起始时间(月日时分)
//2BYTE 第 1 类负荷记录间隔时间(分)
//2BYTE 第 2 类负荷记录间隔时间(分)
//2BYTE 第 3 类负荷记录间隔时间(分)
//2BYTE 第 4 类负荷记录间隔时间(分)
//2BYTE 第 5 类负荷记录间隔时间(分)
//2BYTE 第 6 类负荷记录间隔时间(分)
#define ADDR_04000D01     ADDR_04000A01+16
//2BYTE A 相电导系数 
//2BYTE A 相电纳系数 
//2BYTE A 相电阻系数 
//2BYTE A 相电抗系数 
//2BYTE B 相电导系数 
//2BYTE B 相电纳系数 
//2BYTE B 相电阻系数 
//2BYTE B 相电抗系数
//2BYTE C 相电导系数 
//2BYTE C 相电纳系数 
//2BYTE C 相电阻系数 
//2BYTE C 相电抗系数
#define ADDR_04000E01     ADDR_04000D01+24
//3BYTE 正向有功功率上限值
//3BYTE 反向有功功率上限值
//2BYTE 电压上限值 
//2BYTE 电压下限值
#define ADDR_04000F01     ADDR_04000E01+10
//4BYTE 报警电量1限值(NNNNNN.NN kWh)
//4BYTE 报警电量2限值(NNNNNN.NN kWh)
//4BYTE 囤积电量限值(NNNNNN.NN kWh)
//4BYTE 透支电量限值(NNNNNN.NN kWh)
#define ADDR_04001101     ADDR_04000F01+16
//1BYTE 电表运行特征字1电表运行特征字1:b0=外置开关控制方式(0电平,1脉冲),b1=液晶①②字样意义(0显示1、2套时段,1显示1、2套费率),b2=主动上报模式(0不启用后续标志,1启用后续标志)
#define ADDR_04001201     ADDR_04001101+1
//5BYTE 年月日时分,整点冻结起始时间
//1BYTE 分,整点冻结时间间隔
//2BYTE 时分,日冻结时间
#define ADDR_04001401     ADDR_04001201+8
//2BYTE 分钟,跳闸延时时间（NNNN为跳闸前告警时间）

#define ADDR_04040101     ADDR_04001401+2
//5BYTE 自动循环显示第1屏显示数据项
//...
//5BYTE 自动循环显示第100屏显示数据项

#define ADDR_04040201     ADDR_04040101+(5*100)
//5BYTE 按键循环显示第1屏显示数据项
//...
//5BYTE 按键循环显示第100屏显示数据项
#define ADDR_04090101     ADDR_04040201+(5*100)
//2BYTE 失压事件电压触发上限000.0V
//2BYTE 失压事件电压恢复下限000.0V
//3BYTE 失压事件电流触发下限00.0000A
//1BYTE 失压事件判定延时时间
#define ADDR_04090201     ADDR_04090101+8
//2BYTE 欠压事件电压触发上限000.0V
//1BYTE 欠压事件判定延时时间
#define ADDR_04090301     ADDR_04090201+3
//2BYTE 过压事件电压触发下限000.0V
//1BYTE 过压事件判定延时时间
#define ADDR_04090401     ADDR_04090301+3
//2BYTE 断相事件电压触发上限000.0V
//3BYTE 断相事件电流触发上限00.0000A
//1BYTE 断相事件判定延时时间
#define ADDR_04090501     ADDR_04090401+6
//2BYTE 电压不平衡率限值00.00
//1BYTE 电压不平衡率判定延时时间
#define ADDR_04090601     ADDR_04090501+3
//2BYTE 电流不平衡率限值00.00
//1BYTE 电流不平衡率判定延时时间
#define ADDR_04090701     ADDR_04090601+3
//2BYTE 失流事件电压触发下限000.0V
//3BYTE 失流事件电流触发上限00.0000A
//3BYTE 失流事件电流触发下限00.0000A
//1BYTE 失流事件判定延时时间
#define ADDR_04090801     ADDR_04090701+9
//2BYTE 过流事件电流触发下限000.0A
//1BYTE 过流事件判定延时时间
#define ADDR_04090901     ADDR_04090801+3
//2BYTE 断流事件电压触发下限000.0V
//3BYTE 断流事件电流触发上限00.0000A
//1BYTE 断流事件判定延时时间
#define ADDR_04090A01     ADDR_04090901+6
//3BYTE 潮流反向事件有功功率触发下限00.0000KW
//1BYTE 潮流反向事件判定延时时间
#define ADDR_04090B01     ADDR_04090A01+4
//3BYTE 过载事件有功功率触发下限00.0000KW
//1BYTE 过载事件判定延时时间
#define ADDR_04090C01     ADDR_04090B01+4
//2BYTE 电压考核上限
//2BYTE 电压考核下限
#define ADDR_04090D01     ADDR_04090C01+4
//3BYTE 有功需量超限事件需量触发下限00.0000KW
//3BYTE 无功需量超限事件需量触发下限00.0000KVAR
//1BYTE 需量超限事件判定延时时间
#define ADDR_04090E01     ADDR_04090D01+7
//2BYTE 总功率因数超下限阀值0.000
//1BYTE 总功率因数超下限判定延时时间
#define ADDR_04090F01     ADDR_04090E01+3
//2BYTE 电流严重不平衡限值00.00%
//1BYTE 电流严重不平衡触发延时时间

#define ADDR_CMD_CONGEAL     ADDR_04090F01+3//冻结命令
//4BYTE 命令分时日月
//4BYTE 上次已定时冻结分时日月
//4BYTE 上次已定时冻结分时日月(通信读取用),定时冻结时间用于读出冻结命令（控制码16H）的冻结时间，99DDhhmm表示以月为周期定时冻结，9999hhmm表示以日为周期定时冻结，999999mm表示以小时为周期定时冻结

#define ADDR_04800001     ADDR_CMD_CONGEAL+12
//32BYTE 厂家软件版本号(ASCII 码)
//32BYTE 厂家硬件版本号(ASCII 码)
//32BYTE 厂家编号(ASCII 码)

#define ADDR_04000208     ADDR_04800001+(3*32)
//1BYTE_HEX 密钥总条数
#define ADDR_04000308     ADDR_04000208+1
//1BYTE_BCD 秒 上电全显时间(液晶查看命令显示及背光点亮维持时间为10s；10s过后或按翻页键、重新上电时退出该状态，自动退出后，进入轮显第一屏)
#define ADDR_0400040F     ADDR_04000308+1//电能表位置信息
//4BYTE XXXX.XXXX 经度
//4BYTE XXXX.XXXX 纬度
//3BYTE XXXX.XX 高度
#define ADDR_04001006     ADDR_0400040F+11
//4BYTE XXXXXX.XX 元
//#define ADDR_04001104     ADDR_04001006+4
////6BYTE 主动上报模式字(不用,有新定义的8byte)
#define ADDR_04091001     ADDR_04001006+4+6
//3BYTE_BCD NN.NNNN kW 功率反向事件有功功率触发下限
//1BYTE_BCD NN 秒 功率反向事件判定延时时间
#define ADDR_04800004     ADDR_04091001+4
//8BYTE 软件备案号(软件备案号由供应商唯一编码（2字节）+备案日期（4字节20120523）+顺序号（2字节，按送检顺序产生）。未获得备案号时，备案号默认为AAAAAAAAAAAAAAAA)

#define ADDR_04001104     ADDR_04800004+8//主动上报模式字
//8byte
//B7时钟故障 B6负荷开关误动或拒动 B5存储器故障或损坏 B4内部程序错误 B3时钟电池电压低 B2内卡初始化错误 B1ESAM错误 B0控制回路错误
//B15合闸 B14跳闸 B13电源异常 B12恒定磁场干扰 B11开端钮盖 B10开表盖 B9透支状态 B8停电抄表电池欠压
//B23断相 B22功率反向 B21过载 B20过流 B19失流 B18过压 B17欠压 B16失压
//B31保留 B30保留 B29保留 B28保留 B27保留 B26保留 B25保留 B24断流
//B39总功率因数超下限 B38需量超限 B37掉电 B36辅助电源失电 B35电流不平衡 B34电压不平衡 B33电流逆相序 B32电压逆相序
//B47保留 B46保留 B45保留 B44保留 B43保留 B42全失压 B41潮流反向 B40电流严重不平衡
//B55周休日编程 B54时区表编程 B53时段表编程 B52校时 B51事件清零 B50需量清零 B49电表清零 B48编程
//B63密钥更新 B62阶梯表编程 B61费率参数表编程 B60结算日编程 B59无功组合方式2编程 B58无功组合方式1编程 B57有功组合方式编程 B56节假日编程


#define ADDR_MeterSet3_End     (ADDR_04001104+8)//智能表3类设置数据结束
#define ADDR_MeterParameter_EFLASH_End     (ADDR_MeterSet3_End)
#if (ADDR_MeterParameter_EFLASH_End-ADDR_MeterParameter_EFLASH_Start)>4096
#error ADDR_MeterParameter_EFLASH_End>4096
#endif
//电表设置参数结束--------------------------------------------------------------------------------



//电表电能类上月数据------------------------------------------------------------------------------
#define ADDR_MeterEnergy_EFLASH_Start     (ADDR_MeterParameter_EFLASH_Start+(1*4096))//电表电能类数据在EFLASH开始地址
#define ADDR_00000000L     ADDR_MeterEnergy_EFLASH_Start//上月组合有功电能
//4BYTE上1结算日的时日月年
//上1结算日总,费率1-M电能
//...
//4BYTE上N结算日的时日月年
//上N结算日总,费率1-M电能
#define ADDR_00010000L     ADDR_00000000L+((4+(5*(1+MMaxTariff)))*MaxMonth)//上月正向有功电能
//4BYTE上1结算日的时日月年
//上1结算日总,费率1-M电能
//...
//4BYTE上N结算日的时日月年
//上N结算日总,费率1-M电能
#define ADDR_00020000L     ADDR_00010000L+((4+(5*(1+MMaxTariff)))*MaxMonth)//上月反向有功电能
//4BYTE上1结算日的时日月年
//上1结算日总,费率1-M电能
//...
//4BYTE上N结算日的时日月年
//上N结算日总,费率1-M电能
#define ADDR_00030000L     ADDR_00020000L+((4+(5*(1+MMaxTariff)))*MaxMonth)//上月组合无功1电能
//4BYTE上1结算日的时日月年
//上1结算日总,费率1-M电能
//...
//4BYTE上N结算日的时日月年
//上N结算日总,费率1-M电能
#define ADDR_00040000L     ADDR_00030000L+((4+(5*(1+MMaxTariff)))*MaxMonth)//上月组合无功2电能
//4BYTE上1结算日的时日月年
//上1结算日总,费率1-M电能
//...
//4BYTE上N结算日的时日月年
//上N结算日总,费率1-M电能
#define ADDR_00050000L     ADDR_00040000L+((4+(5*(1+MMaxTariff)))*MaxMonth)//上月1象限无功电能
//4BYTE上1结算日的时日月年
//上1结算日总,费率1-M电能
//...
//4BYTE上N结算日的时日月年
//上N结算日总,费率1-M电能
#define ADDR_00060000L     ADDR_00050000L+((4+(5*(1+MMaxTariff)))*MaxMonth)//上月2象限无功电能
//4BYTE上1结算日的时日月年
//上1结算日总,费率1-M电能
//...
//4BYTE上N结算日的时日月年
//上N结算日总,费率1-M电能
#define ADDR_00070000L     ADDR_00060000L+((4+(5*(1+MMaxTariff)))*MaxMonth)//上月3象限无功电能
//4BYTE上1结算日的时日月年
//上1结算日总,费率1-M电能
//...
//4BYTE上N结算日的时日月年
//上N结算日总,费率1-M电能
#define ADDR_00080000L     ADDR_00070000L+((4+(5*(1+MMaxTariff)))*MaxMonth)//上月4象限无功电能
//4BYTE上1结算日的时日月年
//上1结算日总,费率1-M电能
//...
//4BYTE上N结算日的时日月年
//上N结算日总,费率1-M电能
#define ADDR_00090000L     ADDR_00080000L+((4+(5*(1+MMaxTariff)))*MaxMonth)//上月正向视在电能
//4BYTE上1结算日的时日月年
//上1结算日总,费率1-M电能
//...
//4BYTE上N结算日的时日月年
//上N结算日总,费率1-M电能
#define ADDR_000A0000L     ADDR_00090000L+((4+(5*(1+MMaxTariff)))*MaxMonth)//上月反向视在电能
//4BYTE上1结算日的时日月年
//上1结算日总,费率1-M电能
//...
//4BYTE上N结算日的时日月年
//上N结算日总,费率1-M电能
#define ADDR_000B0000L     ADDR_000A0000L+((4+(5*(1+MMaxTariff)))*MaxMonth)//上结算周期组合有功总累计用电量
//4BYTE上1结算日的时日月年
//上1结算日总电能
//...
//4BYTE上N结算日的时日月年
//上N结算日总电能
#define ADDR_000C0000L     ADDR_000B0000L+((4+5)*MaxMonth)//上月度组合有功总累计用电量
//4BYTE 上1月度组合有功总累计用电量
//4BYTE 上1次月结算日结算时间年月日时
//4BYTE 上2次月结算日结算时间年月日时
//...
//4BYTE 上12次月结算日结算时间年月日时
#define ADDR_000D0000L     ADDR_000C0000L+4+(4*MaxMonth)//上年结算周期组合有功总累计用电量
//4BYTE 上1次年结算日结算时间
//4BYTE 上1年结算周期组合有功总累计用电量
//...
//4BYTE 上4次年结算日结算时间
//4BYTE 上4年结算周期组合有功总累计用电量

#define ADDR_00800000L     ADDR_000D0000L+(8*4)//上月关联等总电能
//4BYTE上1结算日的时日月年
//5BYTE_BCD 上1结算日关联总电能
//5BYTE_BCD 上1结算日正有功基波总电能
//5BYTE_BCD 上1结算日反有功基波总电能
//5BYTE_BCD 上1结算日正有功谐波总电能
//5BYTE_BCD 上1结算日反有功谐波总电能
//5BYTE_BCD 上1结算日铜损有功电能总电能
//5BYTE_BCD 上1结算日铁损有功电能总电能
//...
//4BYTE上N结算日的时日月年
//5BYTE_BCD 上N结算日关联总电能
//5BYTE_BCD 上N结算日正有功基波总电能
//5BYTE_BCD 上N结算日反有功基波总电能
//5BYTE_BCD 上N结算日正有功谐波总电能
//5BYTE_BCD 上N结算日反有功谐波总电能
//5BYTE_BCD 上N结算日铜损有功电能总电能
//5BYTE_BCD 上N结算日铁损有功电能总电能
#define ADDR_00150000L     ADDR_00800000L+((4+35)*MaxMonth)//上月A电能
//4BYTE上1结算日的时日月年
//5BYTE_BCD 上1结算日相正向有功电能
//5BYTE_BCD 上1结算日相反向有功电能
//5BYTE_BCD 上1结算日相组合无功 1 电能
//5BYTE_BCD 上1结算日相组合无功 2 电能
//5BYTE_BCD 上1结算日相第一象限无功电能
//5BYTE_BCD 上1结算日相第二象限无功电能
//5BYTE_BCD 上1结算日相第三象限无功电能
//5BYTE_BCD 上1结算日相第四象限无功电能
//5BYTE_BCD 上1结算日相正向视在电能
//5BYTE_BCD 上1结算日相反向视在电能
//5BYTE_BCD 上1结算日相关联电能
//5BYTE_BCD 上1结算日相正向有功基波电能
//5BYTE_BCD 上1结算日相反向有功基波电能
//5BYTE_BCD 上1结算日相正向有功谐波电能
//5BYTE_BCD 上1结算日相反向有功谐波电能
//5BYTE_BCD 上1结算日相铜损有功电能补偿量
//5BYTE_BCD 上1结算日相铁损有功电能补偿量
//...
//4BYTE上N结算日的时日月年
//5BYTE_BCD 上N结算日相正向有功电能
//5BYTE_BCD 上N结算日相反向有功电能
//5BYTE_BCD 上N结算日相组合无功 1 电能
//5BYTE_BCD 上N结算日相组合无功 2 电能
//5BYTE_BCD 上N结算日相第一象限无功电能
//5BYTE_BCD 上N结算日相第二象限无功电能
//5BYTE_BCD 上N结算日相第三象限无功电能
//5BYTE_BCD 上N结算日相第四象限无功电能
//5BYTE_BCD 上N结算日相正向视在电能
//5BYTE_BCD 上N结算日相反向视在电能
//5BYTE_BCD 上N结算日相关联电能
//5BYTE_BCD 上N结算日相正向有功基波电能
//5BYTE_BCD 上N结算日相反向有功基波电能
//5BYTE_BCD 上N结算日相正向有功谐波电能
//5BYTE_BCD 上N结算日相反向有功谐波电能
//5BYTE_BCD 上N结算日相铜损有功电能补偿量
//5BYTE_BCD 上N结算日相铁损有功电能补偿量
#define ADDR_00290000L     ADDR_00150000L+((4+85)*MaxMonth)//上月B电能
//4BYTE上1结算日的时日月年
//5BYTE_BCD 上1结算日相正向有功电能
//5BYTE_BCD 上1结算日相反向有功电能
//5BYTE_BCD 上1结算日相组合无功 1 电能
//5BYTE_BCD 上1结算日相组合无功 2 电能
//5BYTE_BCD 上1结算日相第一象限无功电能
//5BYTE_BCD 上1结算日相第二象限无功电能
//5BYTE_BCD 上1结算日相第三象限无功电能
//5BYTE_BCD 上1结算日相第四象限无功电能
//5BYTE_BCD 上1结算日相正向视在电能
//5BYTE_BCD 上1结算日相反向视在电能
//5BYTE_BCD 上1结算日相关联电能
//5BYTE_BCD 上1结算日相正向有功基波电能
//5BYTE_BCD 上1结算日相反向有功基波电能
//5BYTE_BCD 上1结算日相正向有功谐波电能
//5BYTE_BCD 上1结算日相反向有功谐波电能
//5BYTE_BCD 上1结算日相铜损有功电能补偿量
//5BYTE_BCD 上1结算日相铁损有功电能补偿量
//...
//4BYTE上N结算日的时日月年
//5BYTE_BCD 上N结算日相正向有功电能
//5BYTE_BCD 上N结算日相反向有功电能
//5BYTE_BCD 上N结算日相组合无功 1 电能
//5BYTE_BCD 上N结算日相组合无功 2 电能
//5BYTE_BCD 上N结算日相第一象限无功电能
//5BYTE_BCD 上N结算日相第二象限无功电能
//5BYTE_BCD 上N结算日相第三象限无功电能
//5BYTE_BCD 上N结算日相第四象限无功电能
//5BYTE_BCD 上N结算日相正向视在电能
//5BYTE_BCD 上N结算日相反向视在电能
//5BYTE_BCD 上N结算日相关联电能
//5BYTE_BCD 上N结算日相正向有功基波电能
//5BYTE_BCD 上N结算日相反向有功基波电能
//5BYTE_BCD 上N结算日相正向有功谐波电能
//5BYTE_BCD 上N结算日相反向有功谐波电能
//5BYTE_BCD 上N结算日相铜损有功电能补偿量
//5BYTE_BCD 上N结算日相铁损有功电能补偿量
#define ADDR_003D0000L     ADDR_00290000L+((4+85)*MaxMonth)//上月C电能
//4BYTE上1结算日的时日月年
//5BYTE_BCD 上1结算日相正向有功电能
//5BYTE_BCD 上1结算日相反向有功电能
//5BYTE_BCD 上1结算日相组合无功 1 电能
//5BYTE_BCD 上1结算日相组合无功 2 电能
//5BYTE_BCD 上1结算日相第一象限无功电能
//5BYTE_BCD 上1结算日相第二象限无功电能
//5BYTE_BCD 上1结算日相第三象限无功电能
//5BYTE_BCD 上1结算日相第四象限无功电能
//5BYTE_BCD 上1结算日相正向视在电能
//5BYTE_BCD 上1结算日相反向视在电能
//5BYTE_BCD 上1结算日相关联电能
//5BYTE_BCD 上1结算日相正向有功基波电能
//5BYTE_BCD 上1结算日相反向有功基波电能
//5BYTE_BCD 上1结算日相正向有功谐波电能
//5BYTE_BCD 上1结算日相反向有功谐波电能
//5BYTE_BCD 上1结算日相铜损有功电能补偿量
//5BYTE_BCD 上1结算日相铁损有功电能补偿量
//...
//4BYTE上N结算日的时日月年
//5BYTE_BCD 上N结算日相正向有功电能
//5BYTE_BCD 上N结算日相反向有功电能
//5BYTE_BCD 上N结算日相组合无功 1 电能
//5BYTE_BCD 上N结算日相组合无功 2 电能
//5BYTE_BCD 上N结算日相第一象限无功电能
//5BYTE_BCD 上N结算日相第二象限无功电能
//5BYTE_BCD 上N结算日相第三象限无功电能
//5BYTE_BCD 上N结算日相第四象限无功电能
//5BYTE_BCD 上N结算日相正向视在电能
//5BYTE_BCD 上N结算日相反向视在电能
//5BYTE_BCD 上N结算日相关联电能
//5BYTE_BCD 上N结算日相正向有功基波电能
//5BYTE_BCD 上N结算日相反向有功基波电能
//5BYTE_BCD 上N结算日相正向有功谐波电能
//5BYTE_BCD 上N结算日相反向有功谐波电能
//5BYTE_BCD 上N结算日相铜损有功电能补偿量
//5BYTE_BCD 上N结算日相铁损有功电能补偿量
#define ADDR_CARD_NOTE     ADDR_003D0000L+((4+85)*MaxMonth)//IC卡记录
//3BYTE 非法卡插入次数	3	BCD
//1BYTE 
//1BYTE 开户标记(参数预置卡插入时恢复到出厂状态0),B0=远程开户,B1=本地开户
//8BYTE 购电卡复位后信息码,用于唯一性本地开户识别
//1BYTE 
#define ADDR_CMD_CTRL     ADDR_CARD_NOTE+14//命令跳闸/合闸允许、报警/报警解除、保电/保电解除
//4BYTE 跳闸/合闸操作者代码
//1BYTE 1AH=收到跳闸命令,1BH=收到合闸命令
//1BYTE 跳合闸命令执行过程0=合闸,1=跳闸前延时,2=跳闸
//4BYTE 报警/报警解除操作者代码
//1BYTE 2AH=收到报警命令,2BH=收到报警解除命令
//1BYTE 
//4BYTE 保电/保电解除操作者代码
//1BYTE 3AH=收到保电命令,3BH=收到保电解除命令
//1BYTE 
//1BYTE 本地控制0=合闸,1=剩余金额≤报警金额2预跳闸,2=插卡后合闸,3=透支金额≥透支门限金额跳闸


#define ADDR_MeterEnergy_EFLASH_End     ADDR_CMD_CTRL+19//电表电能类数据在EFLASH结束地址
//电表电能类上月数据结束---------------------------------------------------------------------------



//电表需量类数据---------------------------------------------------------------------------
#define ADDR_MeterDemand_EFLASH_Start     ADDR_MeterEnergy_EFLASH_End//电表需量类在EFLASH开始地址
#define ADDR_01010000     ADDR_MeterDemand_EFLASH_Start//正有功最大需量
//8BYTE 总最大需量和发生时间
//8BYTE 费率1最大需量和发生时间
//...
//8BYTE 费率M最大需量和发生时间
//4BYTE上1结算日的时日月年
//上1结算日总,费率1-M最大需量和发生时间
//...
//4BYTE上N结算日的时日月年
//上N结算日总,费率1-M最大需量和发生时间
#define ADDR_01020000     ADDR_01010000+(8*(1+MMaxTariff))+((4+(8*(1+MMaxTariff)))*MaxMonth)//反有功最大需量
//8BYTE 总最大需量和发生时间
//8BYTE 费率1最大需量和发生时间
//...
//8BYTE 费率M最大需量和发生时间
//4BYTE上1结算日的时日月年
//上1结算日总,费率1-M最大需量和发生时间
//...
//4BYTE上N结算日的时日月年
//上N结算日总,费率1-M最大需量和发生时间
#define ADDR_01030000     ADDR_01020000+(8*(1+MMaxTariff))+((4+(8*(1+MMaxTariff)))*MaxMonth)//组合无功1最大需量
//8BYTE 总最大需量和发生时间
//8BYTE 费率1最大需量和发生时间
//...
//8BYTE 费率M最大需量和发生时间
//4BYTE上1结算日的时日月年
//上1结算日总,费率1-M最大需量和发生时间
//...
//4BYTE上N结算日的时日月年
//上N结算日总,费率1-M最大需量和发生时间
#define ADDR_01040000     ADDR_01030000+(8*(1+MMaxTariff))+((4+(8*(1+MMaxTariff)))*MaxMonth)//组合无功2最大需量
//8BYTE 总最大需量和发生时间
//8BYTE 费率1最大需量和发生时间
//...
//8BYTE 费率M最大需量和发生时间
//4BYTE上1结算日的时日月年
//上1结算日总,费率1-M最大需量和发生时间
//...
//4BYTE上N结算日的时日月年
//上N结算日总,费率1-M最大需量和发生时间
#define ADDR_01050000     ADDR_01040000+(8*(1+MMaxTariff))+((4+(8*(1+MMaxTariff)))*MaxMonth)//1象限无功最大需量
//8BYTE 总最大需量和发生时间
//8BYTE 费率1最大需量和发生时间
//...
//8BYTE 费率M最大需量和发生时间
//4BYTE上1结算日的时日月年
//上1结算日总,费率1-M最大需量和发生时间
//...
//4BYTE上N结算日的时日月年
//上N结算日总,费率1-M最大需量和发生时间
#define ADDR_01060000     ADDR_01050000+(8*(1+MMaxTariff))+((4+(8*(1+MMaxTariff)))*MaxMonth)//2象限无功最大需量
//8BYTE 总最大需量和发生时间
//8BYTE 费率1最大需量和发生时间
//...
//8BYTE 费率M最大需量和发生时间
//4BYTE上1结算日的时日月年
//上1结算日总,费率1-M最大需量和发生时间
//...
//4BYTE上N结算日的时日月年
//上N结算日总,费率1-M最大需量和发生时间
#define ADDR_01070000     ADDR_01060000+(8*(1+MMaxTariff))+((4+(8*(1+MMaxTariff)))*MaxMonth)//3象限无功最大需量
//8BYTE 总最大需量和发生时间
//8BYTE 费率1最大需量和发生时间
//...
//8BYTE 费率M最大需量和发生时间
//4BYTE上1结算日的时日月年
//上1结算日总,费率1-M最大需量和发生时间
//...
//4BYTE上N结算日的时日月年
//上N结算日总,费率1-M最大需量和发生时间
#define ADDR_01080000     ADDR_01070000+(8*(1+MMaxTariff))+((4+(8*(1+MMaxTariff)))*MaxMonth)//4象限无功最大需量
//8BYTE 总最大需量和发生时间
//8BYTE 费率1最大需量和发生时间
//...
//8BYTE 费率M最大需量和发生时间
//4BYTE上1结算日的时日月年
//上1结算日总,费率1-M最大需量和发生时间
//...
//4BYTE上N结算日的时日月年
//上N结算日总,费率1-M最大需量和发生时间
#define ADDR_01090000     ADDR_01080000+(8*(1+MMaxTariff))+((4+(8*(1+MMaxTariff)))*MaxMonth)//正向视在最大需量
//8BYTE 总最大需量和发生时间
//8BYTE 费率1最大需量和发生时间
//...
//8BYTE 费率M最大需量和发生时间
//4BYTE上1结算日的时日月年
//上1结算日总,费率1-M最大需量和发生时间
//...
//4BYTE上N结算日的时日月年
//上N结算日总,费率1-M最大需量和发生时间
#define ADDR_010A0000     ADDR_01090000+(8*(1+MMaxTariff))+((4+(8*(1+MMaxTariff)))*MaxMonth)//反向视在最大需量
//8BYTE 总最大需量和发生时间
//8BYTE 费率1最大需量和发生时间
//...
//8BYTE 费率M最大需量和发生时间
//4BYTE上1结算日的时日月年
//上1结算日总,费率1-M最大需量和发生时间
//...
//4BYTE上N结算日的时日月年
//上N结算日总,费率1-M最大需量和发生时间

#define ADDR_MeterDemand_EFLASH_End     ADDR_010A0000+(8*(1+MMaxTariff))+((4+(8*(1+MMaxTariff)))*MaxMonth)//电表需量类在EFLASH结束地址


//电表冻结数据------------------------------------------------------------------------------------------
#define ADDR_MeterCongeal_Start     ((ADDR_MeterDemand_EFLASH_End+4095)&0xFFFFF000)
#define ADDR_05040001     ADDR_MeterCongeal_Start//整点冻结
//上1-254次
//1BYTE 冻结数据模式字
//5BYTE YYMMDDhhmm冻结时间
//4BYTE 总正向有功电能
//4BYTE 总反向有功电能
#define ADDR_05000001     (ADDR_05040001+(14*254))//定时冻结
//上1-60次
//1 BYTE 冻结数据模式字
//5 BYTE YYMMDDhhmm冻结时间
//4*(1+M) BYTE 总及费率1-M正向有功电能
//4*(1+M) BYTE 总及费率1-M反向有功电能
//4*(1+M) BYTE 总及费率1-M组合无功1电能
//4*(1+M) BYTE 总及费率1-M组合无功2电能
//4*(1+M) BYTE 总及费率1-M第1象限电能
//4*(1+M) BYTE 总及费率1-M第2象限电能
//4*(1+M) BYTE 总及费率1-M第3象限电能
//4*(1+M) BYTE 总及费率1-M第4象限电能
//8*(1+M) BYTE 总及费率1-M正向有功最大需量及发生时间
//8*(1+M) BYTE 总及费率1-M反向有功最大需量及发生时间
//24 BYTE 总,A,B,C有功功率无功功率
#define ADDR_05010001     ADDR_05000001+((1+5+((1+MMaxTariff)*4*8)+((1+MMaxTariff)*8*2)+24)*60)//瞬时冻结
//上1-3次
//1 BYTE 冻结数据模式字
//5 BYTE YYMMDDhhmm冻结时间
//4*(1+M) BYTE 总及费率1-M正向有功电能
//4*(1+M) BYTE 总及费率1-M反向有功电能
//4*(1+M) BYTE 总及费率1-M组合无功1电能
//4*(1+M) BYTE 总及费率1-M组合无功2电能
//4*(1+M) BYTE 总及费率1-M第1象限电能
//4*(1+M) BYTE 总及费率1-M第2象限电能
//4*(1+M) BYTE 总及费率1-M第3象限电能
//4*(1+M) BYTE 总及费率1-M第4象限电能
//8*(1+M) BYTE 总及费率1-M正向有功最大需量及发生时间
//8*(1+M) BYTE 总及费率1-M反向有功最大需量及发生时间
//24 BYTE 总,A,B,C有功功率无功功率
#define ADDR_05020001     ADDR_05010001+((1+5+((1+MMaxTariff)*4*8)+((1+MMaxTariff)*8*2)+24)*3)//两套时区表切换冻结
//上1-2次
//1 BYTE 冻结数据模式字
//5 BYTE YYMMDDhhmm冻结时间
//4*(1+M) BYTE 总及费率1-M正向有功电能
//4*(1+M) BYTE 总及费率1-M反向有功电能
//4*(1+M) BYTE 总及费率1-M组合无功1电能
//4*(1+M) BYTE 总及费率1-M组合无功2电能
//4*(1+M) BYTE 总及费率1-M第1象限电能
//4*(1+M) BYTE 总及费率1-M第2象限电能
//4*(1+M) BYTE 总及费率1-M第3象限电能
//4*(1+M) BYTE 总及费率1-M第4象限电能
//8*(1+M) BYTE 总及费率1-M正向有功最大需量及发生时间
//8*(1+M) BYTE 总及费率1-M反向有功最大需量及发生时间
//24 BYTE 总,A,B,C有功功率无功功率
#define ADDR_05030001     ADDR_05020001+((1+5+((1+MMaxTariff)*4*8)+((1+MMaxTariff)*8*2)+24)*2)//两套日时段表切换冻结
//上1-2次
//1 BYTE 冻结数据模式字
//5 BYTE YYMMDDhhmm冻结时间
//4*(1+M) BYTE 总及费率1-M正向有功电能
//4*(1+M) BYTE 总及费率1-M反向有功电能
//4*(1+M) BYTE 总及费率1-M组合无功1电能
//4*(1+M) BYTE 总及费率1-M组合无功2电能
//4*(1+M) BYTE 总及费率1-M第1象限电能
//4*(1+M) BYTE 总及费率1-M第2象限电能
//4*(1+M) BYTE 总及费率1-M第3象限电能
//4*(1+M) BYTE 总及费率1-M第4象限电能
//8*(1+M) BYTE 总及费率1-M正向有功最大需量及发生时间
//8*(1+M) BYTE 总及费率1-M反向有功最大需量及发生时间
//24 BYTE 总,A,B,C有功功率无功功率
#define ADDR_05050001     ADDR_05030001+((1+5+((1+MMaxTariff)*4*8)+((1+MMaxTariff)*8*2)+24)*2)//两套费率电价切换冻结
//上1-2次
//1 BYTE 冻结数据模式字
//5 BYTE YYMMDDhhmm冻结时间
//4*(1+M) BYTE 总及费率1-M正向有功电能
//4*(1+M) BYTE 总及费率1-M反向有功电能
//4*(1+M) BYTE 总及费率1-M组合无功1电能
//4*(1+M) BYTE 总及费率1-M组合无功2电能
//4*(1+M) BYTE 总及费率1-M第1象限电能
//4*(1+M) BYTE 总及费率1-M第2象限电能
//4*(1+M) BYTE 总及费率1-M第3象限电能
//4*(1+M) BYTE 总及费率1-M第4象限电能
//8*(1+M) BYTE 总及费率1-M正向有功最大需量及发生时间
//8*(1+M) BYTE 总及费率1-M反向有功最大需量及发生时间
//24 BYTE 总,A,B,C有功功率无功功率
#define ADDR_05060001     ADDR_05050001+((1+5+((1+MMaxTariff)*4*8)+((1+MMaxTariff)*8*2)+24)*2)//日冻结
//上1-62次
//1 BYTE 冻结数据模式字
//5 BYTE YYMMDDhhmm冻结时间
//4*(1+M) BYTE 总及费率1-M正向有功电能
//4*(1+M) BYTE 总及费率1-M反向有功电能
//4*(1+M) BYTE 总及费率1-M组合无功1电能
//4*(1+M) BYTE 总及费率1-M组合无功2电能
//4*(1+M) BYTE 总及费率1-M第1象限电能
//4*(1+M) BYTE 总及费率1-M第2象限电能
//4*(1+M) BYTE 总及费率1-M第3象限电能
//4*(1+M) BYTE 总及费率1-M第4象限电能
//8*(1+M) BYTE 总及费率1-M正向有功最大需量及发生时间
//8*(1+M) BYTE 总及费率1-M反向有功最大需量及发生时间
//24 BYTE 总,A,B,C有功功率无功功率
#define ADDR_05070001     ADDR_05060001+((1+5+((1+MMaxTariff)*4*8)+((1+MMaxTariff)*8*2)+24)*62)//两套阶梯切换冻结
//上1-2次
//1 BYTE 冻结数据模式字
//5 BYTE YYMMDDhhmm冻结时间
//4*(1+M) BYTE 总及费率1-M正向有功电能
//4*(1+M) BYTE 总及费率1-M反向有功电能
//4*(1+M) BYTE 总及费率1-M组合无功1电能
//4*(1+M) BYTE 总及费率1-M组合无功2电能
//4*(1+M) BYTE 总及费率1-M第1象限电能
//4*(1+M) BYTE 总及费率1-M第2象限电能
//4*(1+M) BYTE 总及费率1-M第3象限电能
//4*(1+M) BYTE 总及费率1-M第4象限电能
//8*(1+M) BYTE 总及费率1-M正向有功最大需量及发生时间
//8*(1+M) BYTE 总及费率1-M反向有功最大需量及发生时间
//24 BYTE 总,A,B,C有功功率无功功率
#define ADDR_05080201     ADDR_05070001+((1+5+((1+MMaxTariff)*4*8)+((1+MMaxTariff)*8*2)+24)*2)//上1-62次剩余金额日冻结
//上1次
//2BYTE XXXX购电次数
//5BYTE XX,XXXXXX.XX剩余金额
//上2-62次

#define ADDR_MeterCongeal_End     (ADDR_05080201+(7*62))
//电表冻结数据结束--------------------------------------------------------------------------------------




//电表事件记录------------------------------------------------------------------------------------------
#define ADDR_MeterEvent_Start     ADDR_MeterCongeal_End
//#define ADDR_04001501     ADDR_MeterEvent_Start//主动上报状态字(读取后置0)
////10BYTE 主动上报状态字(不用,有新的12+x字节)
#define ADDR_03110000     ADDR_MeterEvent_Start+10//掉电记录
//3BYTE	掉电总次数
//6BYTE 上1次发生时刻
//6BYTE 上1次结束时刻
//上2次
//...
//上10次
#define ADDR_03050000     ADDR_03110000+3+(10*12)//全失压记录
//3BYTE 次
//3BYTE 分
//6BYTE（上1次）发生时刻
//3BYTE （上1次）电流值
//6BYTE （上1次）结束时刻
//（上2次）
//...
//（上10次）
#define ADDR_10000001     ADDR_03050000+6+(10*15)//失压总次数总累计时间
//3BYTE 失压总次数
//3BYTE 总累计时间
//6BYTE YYMMDDhhmmss最近1次发生时刻
//6BYTE YYMMDDhhmmss最近1次结束时刻
//3BYTE A失压总次数
//3BYTE A总累计时间
//3BYTE B失压总次数
//3BYTE B总累计时间
//3BYTE C失压总次数
//3BYTE C总累计时间
#define ADDR_10010101S     ADDR_10000001+36//A相失压开始时数据
//4BYTE A相000000.00安时,HEX
//4BYTE B相000000.00安时,HEX
//4BYTE C相000000.00安时,HEX
#define ADDR_10010101     ADDR_10010101S+12//A相失压上1次-上10次记录
//6BYTE 0（上1次）A相失压发生时刻
//4BYTE 6（上1次）A相失压发生时刻正向有功总电能
//4BYTE 10（上1次）A相失压发生时刻反向有功总电能
//4BYTE 14（上1次）A相失压发生时刻组合无功1总电能
//4BYTE 18（上1次）A相失压发生时刻组合无功2总电能
//4BYTE 22（上1次）A相失压发生时刻A相正向有功电能
//4BYTE 26（上1次）A相失压发生时刻A相反向有功电能
//4BYTE 30（上1次）A相失压发生时刻A相组合无功1电能
//4BYTE 34（上1次）A相失压发生时刻A相组合无功2电能
//2BYTE 38（上1次）A相失压发生时刻A相电压
//3BYTE 40（上1次）A相失压发生时刻A相电流
//3BYTE 43（上1次）A相失压发生时刻A相有功功率
//3BYTE 46（上1次）A相失压发生时刻A相无功功率
//2BYTE 49（上1次）A相失压发生时刻A相功率因数
//4BYTE 51（上1次）A相失压发生时刻B相正向有功电能
//4BYTE 55（上1次）A相失压发生时刻B相反向有功电能
//4BYTE 59（上1次）A相失压发生时刻B相组合无功1电能
//4BYTE 63（上1次）A相失压发生时刻B相组合无功2电能
//2BYTE 67（上1次）A相失压发生时刻B相电压
//3BYTE 69（上1次）A相失压发生时刻B相电流
//3BYTE 72（上1次）A相失压发生时刻B相有功功率
//3BYTE 75（上1次）A相失压发生时刻B相无功功率
//2BYTE 78（上1次）A相失压发生时刻B相功率因数
//4BYTE 80（上1次）A相失压发生时刻C相正向有功电能
//4BYTE 84（上1次）A相失压发生时刻C相反向有功电能
//4BYTE 88（上1次）A相失压发生时刻C相组合无功1电能
//4BYTE 92（上1次）A相失压发生时刻C相组合无功2电能
//2BYTE 96（上1次）A相失压发生时刻C相电压
//3BYTE 98（上1次）A相失压发生时刻C相电流
//3BYTE 101（上1次）A相失压发生时刻C相有功功率
//3BYTE 104（上1次）A相失压发生时刻C相无功功率
//2BYTE 107（上1次）A相失压发生时刻C相功率因数

//4BYTE 109（上1次）A相失压期间总安时数
//4BYTE 113（上1次）A相失压期间A相安时数
//4BYTE 117（上1次）A相失压期间B相安时数
//4BYTE 121（上1次）A相失压期间C相安时数
//6BYTE 125（上1次）A相失压结束时刻
//4BYTE 131（上1次）A相失压结束时刻正向有功总电能
//4BYTE 135（上1次）A相失压结束时刻反向有功总电能
//4BYTE 139（上1次）A相失压结束时刻组合无功1总电能
//4BYTE 143（上1次）A相失压结束时刻组合无功2总电能
//4BYTE 147（上1次）A相失压结束时刻A相正向有功电能
//4BYTE 151（上1次）A相失压结束时刻A相反向有功电能
//4BYTE 155（上1次）A相失压结束时刻A相组合无功1电能
//4BYTE 159（上1次）A相失压结束时刻A相组合无功2电能
//4BYTE 163（上1次）A相失压结束时刻B相正向有功电能
//4BYTE 167（上1次）A相失压结束时刻B相反向有功电能
//4BYTE 171（上1次）A相失压结束时刻B相组合无功1电能
//4BYTE 175（上1次）A相失压结束时刻B相组合无功2电能
//4BYTE 179（上1次）A相失压结束时刻C相正向有功电能
//4BYTE 183（上1次）A相失压结束时刻C相反向有功电能
//4BYTE 187（上1次）A相失压结束时刻C相组合无功1电能
//4BYTE 191（上1次）A相失压结束时刻C相组合无功2电能
//上2次
//...
//上10次
#define ADDR_10020101S     ADDR_10010101+(10*195)//B相失压开始时数据
//4BYTE A相000000.00安时,HEX
//4BYTE B相000000.00安时,HEX
//4BYTE C相000000.00安时,HEX
#define ADDR_10020101     ADDR_10020101S+12//B相失压上1次-上10次记录
//同A相
#define ADDR_10030101S     ADDR_10020101+(10*195)//C相失压开始时数据
//4BYTE A相000000.00安时,HEX
//4BYTE B相000000.00安时,HEX
//4BYTE C相000000.00安时,HEX
#define ADDR_10030101     ADDR_10030101S+12//C相失压上1次-上10次记录
//同A相

#define ADDR_13010001     ADDR_10030101+(10*195)//断相记录
//3BYTE 断相总次数
//3BYTE 总累计时间
//6BYTE YYMMDDhhmmss最近1次发生时刻
//6BYTE YYMMDDhhmmss最近1次结束时刻
//3BYTE A断相总次数
//3BYTE A总累计时间
//3BYTE B断相总次数
//3BYTE B总累计时间
//3BYTE C断相总次数
//3BYTE C总累计时间
#define ADDR_13010101S     ADDR_13010001+36//A相断相开始时数据
//4BYTE A相000000.00安时,HEX
//4BYTE B相000000.00安时,HEX
//4BYTE C相000000.00安时,HEX
#define ADDR_13010101     ADDR_13010101S+12//A相断相上1次-上10次记录
//6BYTE 0（上1次）A相断相发生时刻
//4BYTE 6（上1次）A相断相发生时刻正向有功总电能
//4BYTE 10（上1次）A相断相发生时刻反向有功总电能
//4BYTE 14（上1次）A相断相发生时刻组合无功1总电能
//4BYTE 18（上1次）A相断相发生时刻组合无功2总电能
//4BYTE 22（上1次）A相断相发生时刻A相正向有功电能
//4BYTE 26（上1次）A相断相发生时刻A相反向有功电能
//4BYTE 30（上1次）A相断相发生时刻A相组合无功1电能
//4BYTE 34（上1次）A相断相发生时刻A相组合无功2电能
//2BYTE 38（上1次）A相断相发生时刻A相电压
//3BYTE 40（上1次）A相断相发生时刻A相电流
//3BYTE 43（上1次）A相断相发生时刻A相有功功率
//3BYTE 46（上1次）A相断相发生时刻A相无功功率
//2BYTE 49（上1次）A相断相发生时刻A相功率因数
//4BYTE 51（上1次）A相断相发生时刻B相正向有功电能
//4BYTE 55（上1次）A相断相发生时刻B相反向有功电能
//4BYTE 59（上1次）A相断相发生时刻B相组合无功1电能
//4BYTE 63（上1次）A相断相发生时刻B相组合无功2电能
//2BYTE 67（上1次）A相断相发生时刻B相电压
//3BYTE 69（上1次）A相断相发生时刻B相电流
//3BYTE 72（上1次）A相断相发生时刻B相有功功率
//3BYTE 75（上1次）A相断相发生时刻B相无功功率
//2BYTE 78（上1次）A相断相发生时刻B相功率因数
//4BYTE 80（上1次）A相断相发生时刻C相正向有功电能
//4BYTE 84（上1次）A相断相发生时刻C相反向有功电能
//4BYTE 88（上1次）A相断相发生时刻C相组合无功1电能
//4BYTE 92（上1次）A相断相发生时刻C相组合无功2电能
//2BYTE 96（上1次）A相断相发生时刻C相电压
//3BYTE 98（上1次）A相断相发生时刻C相电流
//3BYTE 101（上1次）A相断相发生时刻C相有功功率
//3BYTE 104（上1次）A相断相发生时刻C相无功功率
//2BYTE 107（上1次）A相断相发生时刻C相功率因数

//4BYTE 109（上1次）A相断相期间总安时数
//4BYTE 113（上1次）A相断相期间A相安时数
//4BYTE 117（上1次）A相断相期间B相安时数
//4BYTE 121（上1次）A相断相期间C相安时数
//6BYTE 125（上1次）A相断相结束时刻
//4BYTE 131（上1次）A相断相结束时刻正向有功总电能
//4BYTE 135（上1次）A相断相结束时刻反向有功总电能
//4BYTE 139（上1次）A相断相结束时刻组合无功1总电能
//4BYTE 143（上1次）A相断相结束时刻组合无功2总电能
//4BYTE 147（上1次）A相断相结束时刻A相正向有功电能
//4BYTE 151（上1次）A相断相结束时刻A相反向有功电能
//4BYTE 155（上1次）A相断相结束时刻A相组合无功1电能
//4BYTE 159（上1次）A相断相结束时刻A相组合无功2电能
//4BYTE 163（上1次）A相断相结束时刻B相正向有功电能
//4BYTE 167（上1次）A相断相结束时刻B相反向有功电能
//4BYTE 171（上1次）A相断相结束时刻B相组合无功1电能
//4BYTE 175（上1次）A相断相结束时刻B相组合无功2电能
//4BYTE 179（上1次）A相断相结束时刻C相正向有功电能
//4BYTE 183（上1次）A相断相结束时刻C相反向有功电能
//4BYTE 187（上1次）A相断相结束时刻C相组合无功1电能
//4BYTE 191（上1次）A相断相结束时刻C相组合无功2电能
//上2次
//...
//上10次
#define ADDR_13020101S     ADDR_13010101+(10*195)//B相断相开始时数据
//4BYTE A相000000.00安时,HEX
//4BYTE B相000000.00安时,HEX
//4BYTE C相000000.00安时,HEX
#define ADDR_13020101     ADDR_13020101S+12//B相断相上1次-上10次记录
//同A相
#define ADDR_13030101S     ADDR_13020101+(10*195)//C相断相开始时数据
//4BYTE A相000000.00安时,HEX
//4BYTE B相000000.00安时,HEX
//4BYTE C相000000.00安时,HEX
#define ADDR_13030101     ADDR_13030101S+12//C相断相上1次-上10次记录
//同A相

#define ADDR_14000001     ADDR_13030101+(10*195)//电压逆相序记录
//3BYTE 总次数
//3BYTE 总累计时间
#define ADDR_14000101     ADDR_14000001+6//电压逆相序上1次-上10次记录
//6BYTE 0（上1次）电压逆相序发生时刻
//4BYTE 6（上1次）电压逆相序发生时刻正向有功总电能
//4BYTE 10（上1次）电压逆相序发生时刻反向有功总电能
//4BYTE 14（上1次）电压逆相序发生时刻组合无功1总电能
//4BYTE 18（上1次）电压逆相序发生时刻组合无功2总电能
//4BYTE 22（上1次）电压逆相序发生时刻A相正向有功电能
//4BYTE 26（上1次）电压逆相序发生时刻A相反向有功电能
//4BYTE 30（上1次）电压逆相序发生时刻A相组合无功1电能
//4BYTE 34（上1次）电压逆相序发生时刻A相组合无功2电能
//4BYTE 38（上1次）电压逆相序发生时刻B相正向有功电能
//4BYTE 42（上1次）电压逆相序发生时刻B相反向有功电能
//4BYTE 46（上1次）电压逆相序发生时刻B相组合无功1电能
//4BYTE 50（上1次）电压逆相序发生时刻B相组合无功2电能
//4BYTE 54（上1次）电压逆相序发生时刻C相正向有功电能
//4BYTE 58（上1次）电压逆相序发生时刻C相反向有功电能
//4BYTE 62（上1次）电压逆相序发生时刻C相组合无功1电能
//4BYTE 66（上1次）电压逆相序发生时刻C相组合无功2电能

//6BYTE 70（上1次）电压逆相序结束时刻
//4BYTE 76（上1次）电压逆相序结束时刻正向有功总电能
//4BYTE 80（上1次）电压逆相序结束时刻反向有功总电能
//4BYTE 84（上1次）电压逆相序结束时刻组合无功1总电能
//4BYTE 88（上1次）电压逆相序结束时刻组合无功2总电能
//4BYTE 92（上1次）电压逆相序结束时刻A相正向有功电能
//4BYTE 96（上1次）电压逆相序结束时刻A相反向有功电能
//4BYTE 100（上1次）电压逆相序结束时刻A相组合无功1电能
//4BYTE 104（上1次）电压逆相序结束时刻A相组合无功2电能
//4BYTE 108（上1次）电压逆相序结束时刻B相正向有功电能
//4BYTE 112（上1次）电压逆相序结束时刻B相反向有功电能
//4BYTE 116（上1次）电压逆相序结束时刻B相组合无功1电能
//4BYTE 120（上1次）电压逆相序结束时刻B相组合无功2电能
//4BYTE 124（上1次）电压逆相序结束时刻C相正向有功电能
//4BYTE 128（上1次）电压逆相序结束时刻C相反向有功电能
//4BYTE 132（上1次）电压逆相序结束时刻C相组合无功1电能
//4BYTE 136（上1次）电压逆相序结束时刻C相组合无功2电能
//上2-10次
#define ADDR_15000001     ADDR_14000101+(10*140)//电流逆相序记录
//3BYTE 总次数
//3BYTE 总累计时间
#define ADDR_15000101     ADDR_15000001+6//电流逆相序上1次-上10次记录
//6BYTE 0（上1次）电流逆相序发生时刻
//4BYTE 6（上1次）电流逆相序发生时刻正向有功总电能
//4BYTE 10（上1次）电流逆相序发生时刻反向有功总电能
//4BYTE 14（上1次）电流逆相序发生时刻组合无功1总电能
//4BYTE 18（上1次）电流逆相序发生时刻组合无功2总电能
//4BYTE 22（上1次）电流逆相序发生时刻A相正向有功电能
//4BYTE 26（上1次）电流逆相序发生时刻A相反向有功电能
//4BYTE 30（上1次）电流逆相序发生时刻A相组合无功1电能
//4BYTE 34（上1次）电流逆相序发生时刻A相组合无功2电能
//4BYTE 38（上1次）电流逆相序发生时刻B相正向有功电能
//4BYTE 42（上1次）电流逆相序发生时刻B相反向有功电能
//4BYTE 46（上1次）电流逆相序发生时刻B相组合无功1电能
//4BYTE 50（上1次）电流逆相序发生时刻B相组合无功2电能
//4BYTE 54（上1次）电流逆相序发生时刻C相正向有功电能
//4BYTE 58（上1次）电流逆相序发生时刻C相反向有功电能
//4BYTE 62（上1次）电流逆相序发生时刻C相组合无功1电能
//4BYTE 66（上1次）电流逆相序发生时刻C相组合无功2电能
//6BYTE 70（上1次）电流逆相序结束时刻
//4BYTE 76（上1次）电流逆相序结束时刻正向有功总电能
//4BYTE 80（上1次）电流逆相序结束时刻反向有功总电能
//4BYTE 84（上1次）电流逆相序结束时刻组合无功1总电能
//4BYTE 88（上1次）电流逆相序结束时刻组合无功2总电能
//4BYTE 92（上1次）电流逆相序结束时刻A相正向有功电能
//4BYTE 96（上1次）电流逆相序结束时刻A相反向有功电能
//4BYTE 100（上1次）电流逆相序结束时刻A相组合无功1电能
//4BYTE 104（上1次）电流逆相序结束时刻A相组合无功2电能
//4BYTE 108（上1次）电流逆相序结束时刻B相正向有功电能
//4BYTE 112（上1次）电流逆相序结束时刻B相反向有功电能
//4BYTE 116（上1次）电流逆相序结束时刻B相组合无功1电能
//4BYTE 120（上1次）电流逆相序结束时刻B相组合无功2电能
//4BYTE 124（上1次）电流逆相序结束时刻C相正向有功电能
//4BYTE 128（上1次）电流逆相序结束时刻C相反向有功电能
//4BYTE 132（上1次）电流逆相序结束时刻C相组合无功1电能
//4BYTE 136（上1次）电流逆相序结束时刻C相组合无功2电能
//上2-10次
#define ADDR_16000001     ADDR_15000101+(10*140)//电压不平衡总次数,总累计时间
//3BYTE 总次数
//3BYTE 总累计时间
#define ADDR_16000101     ADDR_16000001+6//电压不平衡上1次-上10次记录
//6BYTE 0（上1次）发生时刻
//4BYTE 6（上1次）发生时刻正向有功总电能
//4BYTE 10（上1次）发生时刻反向有功总电能
//4BYTE 14（上1次）发生时刻组合无功1总电能
//4BYTE 18（上1次）发生时刻组合无功2总电能
//4BYTE 22（上1次）发生时刻A相正向有功电能
//4BYTE 26（上1次）发生时刻A相反向有功电能
//4BYTE 30（上1次）发生时刻A相组合无功1电能
//4BYTE 34（上1次）发生时刻A相组合无功2电能
//4BYTE 38（上1次）发生时刻B相正向有功电能
//4BYTE 42（上1次）发生时刻B相反向有功电能
//4BYTE 46（上1次）发生时刻B相组合无功1电能
//4BYTE 50（上1次）发生时刻B相组合无功2电能
//4BYTE 54（上1次）发生时刻C相正向有功电能
//4BYTE 58（上1次）发生时刻C相反向有功电能
//4BYTE 62（上1次）发生时刻C相组合无功1电能
//4BYTE 66（上1次）发生时刻C相组合无功2电能
//3BYTE 70（上1次）最大不平衡率
//6BYTE 73（上1次）结束时刻
//4BYTE 79（上1次）结束时刻正向有功总电能
//4BYTE 83（上1次）结束时刻反向有功总电能
//4BYTE 87（上1次）结束时刻组合无功1总电能
//4BYTE 91（上1次）结束时刻组合无功2总电能
//4BYTE 95（上1次）结束时刻A相正向有功电能
//4BYTE 99（上1次）结束时刻A相反向有功电能
//4BYTE 103（上1次）结束时刻A相组合无功1电能
//4BYTE 107（上1次）结束时刻A相组合无功2电能
//4BYTE 111（上1次）结束时刻B相正向有功电能
//4BYTE 115（上1次）结束时刻B相反向有功电能
//4BYTE 119（上1次）结束时刻B相组合无功1电能
//4BYTE 123（上1次）结束时刻B相组合无功2电能
//4BYTE 127（上1次）结束时刻C相正向有功电能
//4BYTE 131（上1次）结束时刻C相反向有功电能
//4BYTE 135（上1次）结束时刻C相组合无功1电能
//4BYTE 139（上1次）结束时刻C相组合无功2电能
//上2-10次
#define ADDR_17000001     ADDR_16000101+(10*143)//电流不平衡总次数,总累计时间
//3BYTE 总次数
//3BYTE 总累计时间
#define ADDR_17000101     ADDR_17000001+6//电流不平衡上1次-上10次记录
//6BYTE 0（上1次）发生时刻
//4BYTE 6（上1次）发生时刻正向有功总电能
//4BYTE 10（上1次）发生时刻反向有功总电能
//4BYTE 14（上1次）发生时刻组合无功1总电能
//4BYTE 18（上1次）发生时刻组合无功2总电能
//4BYTE 22（上1次）发生时刻A相正向有功电能
//4BYTE 26（上1次）发生时刻A相反向有功电能
//4BYTE 30（上1次）发生时刻A相组合无功1电能
//4BYTE 34（上1次）发生时刻A相组合无功2电能
//4BYTE 38（上1次）发生时刻B相正向有功电能
//4BYTE 42（上1次）发生时刻B相反向有功电能
//4BYTE 46（上1次）发生时刻B相组合无功1电能
//4BYTE 50（上1次）发生时刻B相组合无功2电能
//4BYTE 54（上1次）发生时刻C相正向有功电能
//4BYTE 58（上1次）发生时刻C相反向有功电能
//4BYTE 62（上1次）发生时刻C相组合无功1电能
//4BYTE 66（上1次）发生时刻C相组合无功2电能
//3BYTE 70（上1次）最大不平衡率
//6BYTE 73（上1次）结束时刻
//4BYTE 79（上1次）结束时刻正向有功总电能
//4BYTE 83（上1次）结束时刻反向有功总电能
//4BYTE 87（上1次）结束时刻组合无功1总电能
//4BYTE 91（上1次）结束时刻组合无功2总电能
//4BYTE 95（上1次）结束时刻A相正向有功电能
//4BYTE 99（上1次）结束时刻A相反向有功电能
//4BYTE 103（上1次）结束时刻A相组合无功1电能
//4BYTE 107（上1次）结束时刻A相组合无功2电能
//4BYTE 111（上1次）结束时刻B相正向有功电能
//4BYTE 115（上1次）结束时刻B相反向有功电能
//4BYTE 119（上1次）结束时刻B相组合无功1电能
//4BYTE 123（上1次）结束时刻B相组合无功2电能
//4BYTE 127（上1次）结束时刻C相正向有功电能
//4BYTE 131（上1次）结束时刻C相反向有功电能
//4BYTE 135（上1次）结束时刻C相组合无功1电能
//4BYTE 139（上1次）结束时刻C相组合无功2电能
//上2-10次
#define ADDR_20000001     ADDR_17000101+(10*143)//电流严重不平衡总次数,总累计时间
//3BYTE 总次数
//3BYTE 总累计时间
#define ADDR_20000101     ADDR_20000001+6//电流严重不平衡上1次-上10次记录
//同电流不平衡

#define ADDR_18010001     ADDR_20000101+(10*143)//失流记录
//3BYTE A失流总次数
//3BYTE A总累计时间
//3BYTE B失流总次数
//3BYTE B总累计时间
//3BYTE C失流总次数
//3BYTE C总累计时间
#define ADDR_18010101     ADDR_18010001+18//A相失流上1次-上10次记录
//6BYTE 0（上1次）A相失流发生时刻
//4BYTE 6（上1次）A相失流发生时刻正向有功总电能
//4BYTE 10（上1次）A相失流发生时刻反向有功总电能
//4BYTE 14（上1次）A相失流发生时刻组合无功1总电能
//4BYTE 18（上1次）A相失流发生时刻组合无功2总电能
//4BYTE 22（上1次）A相失流发生时刻A相正向有功电能
//4BYTE 26（上1次）A相失流发生时刻A相反向有功电能
//4BYTE 30（上1次）A相失流发生时刻A相组合无功1电能
//4BYTE 34（上1次）A相失流发生时刻A相组合无功2电能
//2BYTE 38（上1次）A相失流发生时刻A相电压
//3BYTE 40（上1次）A相失流发生时刻A相电流
//3BYTE 43（上1次）A相失流发生时刻A相有功功率
//3BYTE 46（上1次）A相失流发生时刻A相无功功率
//2BYTE 49（上1次）A相失流发生时刻A相功率因数
//4BYTE 51（上1次）A相失流发生时刻B相正向有功电能
//4BYTE 55（上1次）A相失流发生时刻B相反向有功电能
//4BYTE 59（上1次）A相失流发生时刻B相组合无功1电能
//4BYTE 63（上1次）A相失流发生时刻B相组合无功2电能
//2BYTE 67（上1次）A相失流发生时刻B相电压
//3BYTE 69（上1次）A相失流发生时刻B相电流
//3BYTE 72（上1次）A相失流发生时刻B相有功功率
//3BYTE 75（上1次）A相失流发生时刻B相无功功率
//2BYTE 78（上1次）A相失流发生时刻B相功率因数
//4BYTE 80（上1次）A相失流发生时刻C相正向有功电能
//4BYTE 84（上1次）A相失流发生时刻C相反向有功电能
//4BYTE 88（上1次）A相失流发生时刻C相组合无功1电能
//4BYTE 92（上1次）A相失流发生时刻C相组合无功2电能
//2BYTE 96（上1次）A相失流发生时刻C相电压
//3BYTE 98（上1次）A相失流发生时刻C相电流
//3BYTE 101（上1次）A相失流发生时刻C相有功功率
//3BYTE 104（上1次）A相失流发生时刻C相无功功率
//2BYTE 107（上1次）A相失流发生时刻C相功率因数

//6BYTE 109（上1次）A相失流结束时刻
//4BYTE 115（上1次）A相失流结束时刻正向有功总电能
//4BYTE 119（上1次）A相失流结束时刻反向有功总电能
//4BYTE 123（上1次）A相失流结束时刻组合无功1总电能
//4BYTE 127（上1次）A相失流结束时刻组合无功2总电能
//4BYTE 131（上1次）A相失流结束时刻A相正向有功电能
//4BYTE 135（上1次）A相失流结束时刻A相反向有功电能
//4BYTE 139（上1次）A相失流结束时刻A相组合无功1电能
//4BYTE 143（上1次）A相失流结束时刻A相组合无功2电能
//4BYTE 147（上1次）A相失流结束时刻B相正向有功电能
//4BYTE 151（上1次）A相失流结束时刻B相反向有功电能
//4BYTE 155（上1次）A相失流结束时刻B相组合无功1电能
//4BYTE 159（上1次）A相失流结束时刻B相组合无功2电能
//4BYTE 163（上1次）A相失流结束时刻C相正向有功电能
//4BYTE 167（上1次）A相失流结束时刻C相反向有功电能
//4BYTE 171（上1次）A相失流结束时刻C相组合无功1电能
//4BYTE 175（上1次）A相失流结束时刻C相组合无功2电能
//上2次
//...
//上10次
#define ADDR_18020101     ADDR_18010101+(10*179)//B相失流上1次-上10次记录
//同A相
#define ADDR_18030101     ADDR_18020101+(10*179)//C相失流上1次-上10次记录
//同A相
#define ADDR_1A010001     ADDR_18030101+(10*179)//断流记录
//3BYTE A断流总次数
//3BYTE A断流总累计时间
//3BYTE B断流总次数
//3BYTE B断流总累计时间
//3BYTE C断流总次数
//3BYTE C断流总累计时间
#define ADDR_1A010101     ADDR_1A010001+18//A相断流上1次-上10次记录
//6BYTE 0（上1次）A相断流发生时刻
//4BYTE 6（上1次）A相断流发生时刻正向有功总电能
//4BYTE 10（上1次）A相断流发生时刻反向有功总电能
//4BYTE 14（上1次）A相断流发生时刻组合无功1总电能
//4BYTE 18（上1次）A相断流发生时刻组合无功2总电能
//4BYTE 22（上1次）A相断流发生时刻A相正向有功电能
//4BYTE 26（上1次）A相断流发生时刻A相反向有功电能
//4BYTE 30（上1次）A相断流发生时刻A相组合无功1电能
//4BYTE 34（上1次）A相断流发生时刻A相组合无功2电能
//2BYTE 38（上1次）A相断流发生时刻A相电压
//3BYTE 40（上1次）A相断流发生时刻A相电流
//3BYTE 43（上1次）A相断流发生时刻A相有功功率
//3BYTE 46（上1次）A相断流发生时刻A相无功功率
//2BYTE 49（上1次）A相断流发生时刻A相功率因数
//4BYTE 51（上1次）A相断流发生时刻B相正向有功电能
//4BYTE 55（上1次）A相断流发生时刻B相反向有功电能
//4BYTE 59（上1次）A相断流发生时刻B相组合无功1电能
//4BYTE 63（上1次）A相断流发生时刻B相组合无功2电能
//2BYTE 67（上1次）A相断流发生时刻B相电压
//3BYTE 69（上1次）A相断流发生时刻B相电流
//3BYTE 72（上1次）A相断流发生时刻B相有功功率
//3BYTE 75（上1次）A相断流发生时刻B相无功功率
//2BYTE 78（上1次）A相断流发生时刻B相功率因数
//4BYTE 80（上1次）A相断流发生时刻C相正向有功电能
//4BYTE 84（上1次）A相断流发生时刻C相反向有功电能
//4BYTE 88（上1次）A相断流发生时刻C相组合无功1电能
//4BYTE 92（上1次）A相断流发生时刻C相组合无功2电能
//2BYTE 96（上1次）A相断流发生时刻C相电压
//3BYTE 98（上1次）A相断流发生时刻C相电流
//3BYTE 101（上1次）A相断流发生时刻C相有功功率
//3BYTE 104（上1次）A相断流发生时刻C相无功功率
//2BYTE 107（上1次）A相断流发生时刻C相功率因数

//6BYTE 109（上1次）A相断流结束时刻
//4BYTE 115（上1次）A相断流结束时刻正向有功总电能
//4BYTE 119（上1次）A相断流结束时刻反向有功总电能
//4BYTE 123（上1次）A相断流结束时刻组合无功1总电能
//4BYTE 127（上1次）A相断流结束时刻组合无功2总电能
//4BYTE 131（上1次）A相断流结束时刻A相正向有功电能
//4BYTE 135（上1次）A相断流结束时刻A相反向有功电能
//4BYTE 139（上1次）A相断流结束时刻A相组合无功1电能
//4BYTE 143（上1次）A相断流结束时刻A相组合无功2电能
//4BYTE 147（上1次）A相断流结束时刻B相正向有功电能
//4BYTE 151（上1次）A相断流结束时刻B相反向有功电能
//4BYTE 155（上1次）A相断流结束时刻B相组合无功1电能
//4BYTE 159（上1次）A相断流结束时刻B相组合无功2电能
//4BYTE 163（上1次）A相断流结束时刻C相正向有功电能
//4BYTE 167（上1次）A相断流结束时刻C相反向有功电能
//4BYTE 171（上1次）A相断流结束时刻C相组合无功1电能
//4BYTE 175（上1次）A相断流结束时刻C相组合无功2电能
//上2次
//...
//上10次
#define ADDR_1A020101     ADDR_1A010101+(10*179)//B相断流上1次-上10次记录
//同A相
#define ADDR_1A030101     ADDR_1A020101+(10*179)//C相断流上1次-上10次记录
//同A相

#define ADDR_1B010001     ADDR_1A030101+(10*179)//功率反向记录
//3BYTE A功率反向总次数
//3BYTE A功率反向总累计时间
//3BYTE B功率反向总次数
//3BYTE B功率反向总累计时间
//3BYTE C功率反向总次数
//3BYTE C功率反向总累计时间
#define ADDR_1B010101     ADDR_1B010001+18//A相功率反向上1次-上10次记录
//6BYTE 0（上1次）发生时刻
//4BYTE 6（上1次）发生时刻正向有功总电能
//4BYTE 10（上1次）发生时刻反向有功总电能
//4BYTE 14（上1次）发生时刻组合无功1总电能
//4BYTE 18（上1次）发生时刻组合无功2总电能
//4BYTE 22（上1次）发生时刻A相正向有功电能
//4BYTE 26（上1次）发生时刻A相反向有功电能
//4BYTE 30（上1次）发生时刻A相组合无功1电能
//4BYTE 34（上1次）发生时刻A相组合无功2电能
//4BYTE 38（上1次）发生时刻B相正向有功电能
//4BYTE 42（上1次）发生时刻B相反向有功电能
//4BYTE 46（上1次）发生时刻B相组合无功1电能
//4BYTE 50（上1次）发生时刻B相组合无功2电能
//4BYTE 54（上1次）发生时刻C相正向有功电能
//4BYTE 58（上1次）发生时刻C相反向有功电能
//4BYTE 62（上1次）发生时刻C相组合无功1电能
//4BYTE 66（上1次）发生时刻C相组合无功2电能
//6BYTE 70（上1次）结束时刻
//4BYTE 76（上1次）结束时刻正向有功总电能
//4BYTE 80（上1次）结束时刻反向有功总电能
//4BYTE 84（上1次）结束时刻组合无功1总电能
//4BYTE 88（上1次）结束时刻组合无功2总电能
//4BYTE 92（上1次）结束时刻A相正向有功电能
//4BYTE 96（上1次）结束时刻A相反向有功电能
//4BYTE 100（上1次）结束时刻A相组合无功1电能
//4BYTE 104（上1次）结束时刻A相组合无功2电能
//4BYTE 108（上1次）结束时刻B相正向有功电能
//4BYTE 112（上1次）结束时刻B相反向有功电能
//4BYTE 116（上1次）结束时刻B相组合无功1电能
//4BYTE 120（上1次）结束时刻B相组合无功2电能
//4BYTE 124（上1次）结束时刻C相正向有功电能
//4BYTE 128（上1次）结束时刻C相反向有功电能
//4BYTE 132（上1次）结束时刻C相组合无功1电能
//4BYTE 136（上1次）结束时刻C相组合无功2电能
//上2-10次
#define ADDR_1B020101     ADDR_1B010101+(10*140)//B相功率反向上1次-上10次记录
//同A相
#define ADDR_1B030101     ADDR_1B020101+(10*140)//C相功率反向上1次-上10次记录
//同A相

#define ADDR_1C010001     ADDR_1B030101+(10*140)//过载记录
//3BYTE A过载总次数
//3BYTE A总累计时间
//3BYTE B过载总次数
//3BYTE B总累计时间
//3BYTE C过载总次数
//3BYTE C总累计时间
#define ADDR_1C010101     ADDR_1C010001+18//A相过载上1次-上10次记录
//6BYTE 0（上1次）发生时刻
//4BYTE 6（上1次）发生时刻正向有功总电能
//4BYTE 10（上1次）发生时刻反向有功总电能
//4BYTE 14（上1次）发生时刻组合无功1总电能
//4BYTE 18（上1次）发生时刻组合无功2总电能
//4BYTE 22（上1次）发生时刻A相正向有功电能
//4BYTE 26（上1次）发生时刻A相反向有功电能
//4BYTE 30（上1次）发生时刻A相组合无功1电能
//4BYTE 34（上1次）发生时刻A相组合无功2电能
//4BYTE 38（上1次）发生时刻B相正向有功电能
//4BYTE 42（上1次）发生时刻B相反向有功电能
//4BYTE 46（上1次）发生时刻B相组合无功1电能
//4BYTE 50（上1次）发生时刻B相组合无功2电能
//4BYTE 54（上1次）发生时刻C相正向有功电能
//4BYTE 58（上1次）发生时刻C相反向有功电能
//4BYTE 62（上1次）发生时刻C相组合无功1电能
//4BYTE 66（上1次）发生时刻C相组合无功2电能
//6BYTE 70（上1次）结束时刻
//4BYTE 76（上1次）结束时刻正向有功总电能
//4BYTE 80（上1次）结束时刻反向有功总电能
//4BYTE 84（上1次）结束时刻组合无功1总电能
//4BYTE 88（上1次）结束时刻组合无功2总电能
//4BYTE 92（上1次）结束时刻A相正向有功电能
//4BYTE 96（上1次）结束时刻A相反向有功电能
//4BYTE 100（上1次）结束时刻A相组合无功1电能
//4BYTE 104（上1次）结束时刻A相组合无功2电能
//4BYTE 108（上1次）结束时刻B相正向有功电能
//4BYTE 112（上1次）结束时刻B相反向有功电能
//4BYTE 116（上1次）结束时刻B相组合无功1电能
//4BYTE 120（上1次）结束时刻B相组合无功2电能
//4BYTE 124（上1次）结束时刻C相正向有功电能
//4BYTE 128（上1次）结束时刻C相反向有功电能
//4BYTE 132（上1次）结束时刻C相组合无功1电能
//4BYTE 136（上1次）结束时刻C相组合无功2电能
//上2-10次
#define ADDR_1C020101     ADDR_1C010101+(10*140)//B相过载上1次-上10次记录
//同A相
#define ADDR_1C030101     ADDR_1C020101+(10*140)//C相过载上1次-上10次记录
//同A相

#define ADDR_1D000001     ADDR_1C030101+(10*140)//跳闸记录
//3BYTE 跳闸次数
//1BYTE 保留
//6BYTE （上1次）跳闸发生时刻
//4BYTE （上1次）跳闸操作者代码
//4BYTE （上1次）跳闸时正向有功总电能
//4BYTE （上1次）跳闸时反向有功总电能
//4BYTE （上1次）跳闸时第一象限无功总电能
//4BYTE （上1次）跳闸时第二象限无功总电能
//4BYTE （上1次）跳闸时第三象限无功总电能
//4BYTE （上1次）跳闸时第四象限无功总电能
//上2-10次
#define ADDR_1E000001     ADDR_1D000001+4+(10*34)//合闸记录
//3BYTE 合闸次数
//1BYTE 保留
//6BYTE （上1次）合闸发生时刻
//4BYTE （上1次）合闸操作者代码
//4BYTE （上1次）合闸时正向有功总电能
//4BYTE （上1次）合闸时反向有功总电能
//4BYTE （上1次）合闸时第一象限无功总电能
//4BYTE （上1次）合闸时第二象限无功总电能
//4BYTE （上1次）合闸时第三象限无功总电能
//4BYTE （上1次）合闸时第四象限无功总电能
//上2-10次
#define ADDR_1F000001     ADDR_1E000001+4+(10*34)//功率因数超下限记录
//3BYTE 总功率因数超下限总次数
//3BYTE 总功率因数超下限总累计时间
//3BYTE A相功率因数超下限总次数
//3BYTE A相功率因数超下限总累计时间
//3BYTE B相功率因数超下限总次数
//3BYTE B相功率因数超下限总累计时间
//3BYTE C相功率因数超下限总次数
//3BYTE C相功率因数超下限总累计时间
#define ADDR_1F000101     ADDR_1F000001+24//总功率因数超下限上1次-上10次记录
//上1次
//6BYTE YYMMDDhhmmss功率因数超下限发生时刻
//4BYTE XXXXXX.XX功率因数超下限发生时刻正向有功总电能
//4BYTE XXXXXX.XX功率因数超下限发生时刻反向有功总电能
//4BYTE XXXXXX.XX功率因数超下限发生时刻组合无功1总电能
//4BYTE XXXXXX.XX功率因数超下限发生时刻组合无功2总电能
//6BYTE YYMMDDhhmmss功率因数超下限结束时刻
//4BYTE XXXXXX.XX功率因数超下限结束时刻正向有功总电能
//4BYTE XXXXXX.XX功率因数超下限结束时刻反向有功总电能
//4BYTE XXXXXX.XX功率因数超下限结束时刻组合无功1总电能
//4BYTE XXXXXX.XX功率因数超下限结束时刻组合无功2总电能
//上2-10次
#define ADDR_1F010101     ADDR_1F000101+(10*44)//A功率因数超下限上1次-上10次记录
//同总
#define ADDR_1F020101     ADDR_1F010101+(10*44)//B功率因数超下限上1次-上10次记录
//同总
#define ADDR_1F030101     ADDR_1F020101+(10*44)//C功率因数超下限上1次-上10次记录
//同总

#define ADDR_21000000     ADDR_1F030101+(10*44)//潮流反向记录
//3BYTE 潮流反向总次数
#define ADDR_21000001     ADDR_21000000+3//潮流反向上1次-上10次记录
//6BYTE 0（上1次）发生时刻
//1BYTE 1（上1次）潮流反向发生时刻总有功功率方向
//4BYTE 7（上1次）发生时刻正向有功总电能
//4BYTE 11（上1次）发生时刻反向有功总电能
//4BYTE 15（上1次）发生时刻组合无功1总电能
//4BYTE 19（上1次）发生时刻组合无功2总电能
//4BYTE 23（上1次）发生时刻A相正向有功电能
//4BYTE 27（上1次）发生时刻A相反向有功电能
//4BYTE 31（上1次）发生时刻A相组合无功1电能
//4BYTE 35（上1次）发生时刻A相组合无功2电能
//4BYTE 39（上1次）发生时刻B相正向有功电能
//4BYTE 43（上1次）发生时刻B相反向有功电能
//4BYTE 47（上1次）发生时刻B相组合无功1电能
//4BYTE 51（上1次）发生时刻B相组合无功2电能
//4BYTE 55（上1次）发生时刻C相正向有功电能
//4BYTE 59（上1次）发生时刻C相反向有功电能
//4BYTE 63（上1次）发生时刻C相组合无功1电能
//4BYTE 67（上1次）发生时刻C相组合无功2电能
//上2-10次

#define ADDR_03300000     ADDR_21000001+(10*71)//编程记录
//3BYTE 编程总次数
//1BYTE 设置键按下后第1个编程数据标志
//上1次
//6BYTE 发生时刻
//4BYTE 操作者代码
//4*10BYTE 编程的前 10 个数据标识码(不足补 FFFFFFFFH)
//上2次
//...
//上10次
#define ADDR_03300400     ADDR_03300000+4+(50*10)//校时记录
//3BYTE 校时总次数
//1BYTE 保留
//上1次
//4BYTE 操作者代码
//6BYTE 校时前时间
//6BYTE 校时后时间
//上2次
//...
//上10次
#define ADDR_03300500     ADDR_03300400+4+(16*10)//时段表编程记录
//3BYTE //时段表编程总次数
//1BYTE 保留
//上1次
//6BYTE 发生时刻
//4BYTE 操作者代码
//3*14BYTE 时段表编程前第一套第1日时段表数据
//3*14BYTE 时段表编程前第一套第2日时段表数据
//3*14BYTE 时段表编程前第一套第3日时段表数据
//3*14BYTE 时段表编程前第一套第4日时段表数据
//3*14BYTE 时段表编程前第一套第5日时段表数据
//3*14BYTE 时段表编程前第一套第6日时段表数据
//3*14BYTE 时段表编程前第一套第7日时段表数据
//3*14BYTE 时段表编程前第一套第8日时段表数据 
//3*14BYTE 时段表编程前第二套第1日时段表数据
//3*14BYTE 时段表编程前第二套第2日时段表数据
//3*14BYTE 时段表编程前第二套第3日时段表数据
//3*14BYTE 时段表编程前第二套第4日时段表数据
//3*14BYTE 时段表编程前第二套第5日时段表数据
//3*14BYTE 时段表编程前第二套第6日时段表数据
//3*14BYTE 时段表编程前第二套第7日时段表数据
//3*14BYTE 时段表编程前第二套第8日时段表数据
//上2次
//...
//上10次
#define ADDR_03300600     ADDR_03300500+4+(682*10)//时区表编程记录
//3BYTE //时区表编程总次数
//1BYTE 保留
//上1次
//6BYTE 发生时刻
//4BYTE 操作者代码
//3BYTE 时区表编程前第一套第 1 时区表数据
//...
//3BYTE 时区表编程前第一套第 14 时区表数据 
//3BYTE 时区表编程前第二套第 1 时区表数据
//...
//3BYTE 时区表编程前第二套第 14 时区表数据
//上2次
//...
//上10次
#define ADDR_03300700     ADDR_03300600+4+(94*10)//周休日编程记录
//3BYTE 周休日编程总次数
//1BYTE 保留
//上1次
//6BYTE 发生时刻
//4BYTE 操作者代码
//1BYTE 周休日编程前采用的日时段表号
//上2次
//...
//上10次
#define ADDR_03300800     ADDR_03300700+4+(11*10)//节假日编程记录
//3BYTE //节假日编程总次数
//1BYTE 保留
//上1次
//6BYTE 发生时刻
//4BYTE 操作者代码
//4BYTE 节假日编程前第 1 节假日数据
//...
//4BYTE 节假日编程前第 254 节假日数据
//上2次
//...
//上10次
#define ADDR_03300900     ADDR_03300800+4+(1026*10)//有功组合方式编程记录
//3BYTE 有功组合方式编程总次数
//1BYTE 保留
//上1次
//6BYTE 发生时刻
//4BYTE 操作者代码
//1BYTE 编程前的有功组合方式特征字
//上2次
//...
//上10次
#define ADDR_03300A00     ADDR_03300900+4+(11*10)//无功组合方式 1 编程记录
//3BYTE 无功组合方式 1 编程总次数
//1BYTE 保留
//上1次
//6BYTE 发生时刻
//4BYTE 操作者代码
//1BYTE 编程前的组合方式1特征字
//上2次
//...
//上10次
#define ADDR_03300B00     ADDR_03300A00+4+(11*10)//无功组合方式 2 编程记录
//3BYTE 无功组合方式 2 编程总次数
//1BYTE 保留
//上1次
//6BYTE 发生时刻
//4BYTE 操作者代码
//1BYTE 编程前的组合方式1特征字
//上2次
//...
//上10次
#define ADDR_03300C00     ADDR_03300B00+4+(11*10)//结算日编程记录
//3BYTE 结算日编程总次数
//1BYTE 保留
//上1次
//6BYTE 发生时刻
//4BYTE 操作者代码
//2BYTE 结算日编程前每月第 1 结算日数据
//2BYTE 结算日编程前每月第 2 结算日数据
//2BYTE 结算日编程前每月第 3 结算日数据
//上2次
//...
//上10次
#define ADDR_03300D00     ADDR_03300C00+4+(16*10)//开表盖总次数
//3BYTE
#define ADDR_03300D01     ADDR_03300D00+3//开表盖记录
//上1次
//6BYTE 发生时刻
//6BYTE 结束时刻
//4BYTE 开表盖前正向有功总电能
//4BYTE 开表盖前反向有功总电能
//4BYTE 开表盖前第一象限无功总电能
//4BYTE 开表盖前第二象限无功总电能
//4BYTE 开表盖前第三象限无功总电能
//4BYTE 开表盖前第四象限无功总电能
//4BYTE 开表盖后正向有功总电能
//4BYTE 开表盖后反向有功总电能
//4BYTE 开表盖后第一象限无功总电能
//4BYTE 开表盖后第二象限无功总电能
//4BYTE 开表盖后第三象限无功总电能
//4BYTE 开表盖后第四象限无功总电能
//上2次
//...
//上10次
#define ADDR_03300E00     ADDR_03300D01+(60*10)//开端钮盒总次数
//3BYTE
#define ADDR_03300E01     ADDR_03300E00+3//开端钮盒记录
//上1次
//6BYTE 发生时刻
//6BYTE 结束时刻
//4BYTE 开端钮盖前正向有功总电能
//4BYTE 开端钮盖前反向有功总电能
//4BYTE 开端钮盖前第一象限无功总电能
//4BYTE 开端钮盖前第二象限无功总电能
//4BYTE 开端钮盖前第三象限无功总电能
//4BYTE 开端钮盖前第四象限无功总电能
//4BYTE 开端钮盖后正向有功总电能
//4BYTE 开端钮盖后反向有功总电能
//4BYTE 开端钮盖后第一象限无功总电能
//4BYTE 开端钮盖后第二象限无功总电能
//4BYTE 开端钮盖后第三象限无功总电能
//4BYTE 开端钮盖后第四象限无功总电能
//上2次
//...
//上10次
#define ADDR_03300F00     ADDR_03300E01+(60*10)//费率参数表编程总次数
//3BYTE XXXXXX
#define ADDR_03300F01     ADDR_03300F00+3//费率参数表编程记录
//上1次
//6BYTE YYMMDDhhmmss发生时刻
//4BYTE C0C1C2C3操作者代码
//4BYTE NNNN.NNNN费率参数表编程前当前套费率1
//...
//4BYTE NNNN.NNNN费率参数表编程前当前套费率N
//4BYTE NNNN.NNNN费率参数表编程前备用套费率1
//...
//4BYTE NNNN.NNNN费率参数表编程前备用套费率N
//上2次
//...
//上10次
#define ADDR_03301000     ADDR_03300F01+((10+(4*MMaxTariff*2))*10)//阶梯表编程总次数
//3BYTE XXXXXX
#define ADDR_03301001     ADDR_03301000+3//阶梯表编程记录
//上1次
//6BYTE YYMMDDhhmmss发生时刻
//4BYTE C0C1C2C3操作者代码
//4BYTE NNNNNN.NN阶梯表编程前当前套第1阶梯值
//...
//4BYTE NNNNNN.NN阶梯表编程前当前套第6阶梯值
//4BYTE NNNN.NNNN阶梯表编程前当前套阶梯电价1
//...
//4BYTE NNNN.NNNN阶梯表编程前当前套阶梯电价7
//3BYTE MMDDhh阶梯表编程前当前年第1结算日
//3BYTE MMDDhh阶梯表编程前当前年第2结算日
//3BYTE MMDDhh阶梯表编程前当前年第3结算日
//3BYTE MMDDhh阶梯表编程前当前年第4结算日
//4BYTE NNNNNN.NN阶梯表编程前备用套第1阶梯值
//...
//4BYTE NNNNNN.NN阶梯表编程前备用套第6阶梯值
//4BYTE NNNN.NNNN阶梯表编程前备用套阶梯电价1
//...
//4BYTE NNNN.NNNN阶梯表编程前备用套阶梯电价7
//3BYTE MMDDhh阶梯表编程前备用年第1结算日
//3BYTE MMDDhh阶梯表编程前备用年第2结算日
//3BYTE MMDDhh阶梯表编程前备用年第3结算日
//3BYTE MMDDhh阶梯表编程前备用年第4结算日
//上2次
//...
//上10次
#define ADDR_03301200     ADDR_03301001+((10+((24+28+12)*2))*10)//密钥更新总次数
//3BYTE
#define ADDR_03301201     ADDR_03301200+3//密钥更新记录
//上1次
//6BYTE 发生时刻
//4BYTE 操作者代码
//1BYTE HEX密钥更新的总条数
//4BYTE BIN更新前的密钥状态字
//上2次
#define ADDR_03301300     ADDR_03301201+(15*2)//异常插卡总次数
//3BYTE
#define ADDR_03301301     ADDR_03301300+3//异常插卡记录
//上1次
//6BYTE YYMMDDhhmmss发生时刻
//8BYTE HH...HH卡序列号
//1BYTE HH错误信息字
//5BYTE HH...HH操作命令头
//2BYTE HHHH错误响应状态
//2BYTE XXXX插卡时总购电次数
//4BYTE XXXXXX.XX插卡时剩余金额
//4BYTE XXXXXX.XX插卡时正向有功总电能
//4BYTE XXXXXX.XX插卡时反向有功总电能
//上2次
//...
//上10次
#define ADDR_03301400     ADDR_03301301+(36*10)//非法插卡总次数
//3BYTE
#define ADDR_03340001     ADDR_03301400+3//上1-10次退费记录
//上1次
//5BYTE YYMMDDhhmm退费日期
//2BYTE XXXX退费前购电次数
//4BYTE XXXXXX.XX退费金额
//4BYTE XXXXXX.XX退费前剩余金额
//4BYTE XXXXXX.XX退费后剩余金额
//上2次
//...
//上10次
#define ADDR_03350000     ADDR_03340001+(19*10)//恒定磁场干扰总次数
//3BYTE XXXXXX
#define ADDR_03350001     ADDR_03350000+3//恒定磁场干扰记录
//上1次
//6BYTE YYMMDDhhmmss发生时刻
//6BYTE YYMMDDhhmmss结束时刻
//4BYTE XXXXXX.XX发生时刻正向有功总电能
//4BYTE XXXXXX.XX发生时刻反向有功总电能
//4BYTE XXXXXX.XX结束时刻正向有功总电能
//4BYTE XXXXXX.XX结束时刻反向有功总电能
//上2次
//...
//上10次
#define ADDR_03360000     ADDR_03350001+(28*10)//负荷开关误动作总次数
//3BYTE XXXXXX
#define ADDR_03360001     ADDR_03360000+3//负荷开关误动作记录
//上1次
//6BYTE YYMMDDhhmmss发生时刻
//6BYTE YYMMDDhhmmss结束时刻
//1BYTE xx负荷开关误动作后状态
//4BYTE XXXXXX.XX负荷开关误动作发生时刻正向有功总电能
//4BYTE XXXXXX.XX负荷开关误动作发生时刻反向有功总电能
//4BYTE XXXXXX.XX负荷开关误动作结束时刻正向有功总电能
//4BYTE XXXXXX.XX负荷开关误动作结束时刻反向有功总电能
//上2次
//...
//上10次
#define ADDR_03370000     ADDR_03360001+(29*10)//电源异常总次数
//3BYTE XXXXXX
#define ADDR_03370001     ADDR_03370000+3//电源异常记录
//上1次
//6BYTE YYMMDDhhmmss发生时刻
//6BYTE YYMMDDhhmmss结束时刻
//4BYTE XXXXXX.XX电源异常发生时刻正向有功总电能
//4BYTE XXXXXX.XX电源异常发生时刻反向有功总电能
//上2次
//...
//上10次

#define ADDR_03300200     ADDR_03370001+(20*10)//需量清零记录
//3BYTE 需量清零总次数
//1BYTE 保留
//上1次
//6BYTE 发生时刻
//4BYTE 操作者代码
//8BYTE 需量清零前正向有功总最大需量及发生时间
//8BYTE 需量清零前反向有功总最大需量及发生时间
//8BYTE 需量清零前第一象限无功总最大需量及发生时间
//8BYTE 需量清零前第二象限无功总最大需量及发生时间
//8BYTE 需量清零前第三象限无功总最大需量及发生时间
//8BYTE 需量清零前第四象限无功总最大需量及发生时间
//8BYTE 需量清零前A相正向有功最大需量及发生时间
//8BYTE 需量清零前A相反向有功最大需量及发生时间
//8BYTE 需量清零前A相第一象限无功最大需量及发生时间
//8BYTE 需量清零前A相第二象限无功最大需量及发生时间
//8BYTE 需量清零前A相第三象限无功最大需量及发生时间
//8BYTE 需量清零前A相第四象限无功最大需量及发生时间 
//8BYTE 需量清零前B相正向有功最大需量及发生时间
//8BYTE 需量清零前B相反向有功最大需量及发生时间
//8BYTE 需量清零前B相第一象限无功最大需量及发生时间
//8BYTE 需量清零前B相第二象限无功最大需量及发生时间
//8BYTE 需量清零前B相第三象限无功最大需量及发生时间
//8BYTE 需量清零前B相第四象限无功最大需量及发生时间
//8BYTE 需量清零前C相正向有功最大需量及发生时间
//8BYTE 需量清零前C相反向有功最大需量及发生时间
//8BYTE 需量清零前C相第一象限无功最大需量及发生时间
//8BYTE 需量清零前C相第二象限无功最大需量及发生时间
//8BYTE 需量清零前C相第三象限无功最大需量及发生时间
//8BYTE 需量清零前C相第四象限无功最大需量及发生时间
//上2次
//...
//上10次
#define ADDR_03320101     ADDR_03300200+4+(202*10)//购电量记录
//5BYTE 上1次购电日期
//2BYTE 上1次购电后总购电次数
//4BYTE 上1次购电量
//4BYTE 上1次购电前剩余电量
//4BYTE 上1次购电后剩余电量
//4BYTE 上1次购电后累计购电量
//上2-10次
#define ADDR_03330101     ADDR_03320101+(23*10)//购电费记录
//5BYTE 上1次购电日期
//2BYTE 上1次购电后总购电次数
//4BYTE 上1次购电金额
//4BYTE 上1次购电前剩余金额
//4BYTE 上1次购电后剩余金额
//4BYTE 上1次购电后累计购电金额
//上2-10次

#define ADDR_03300300     ADDR_03330101+(23*10)//事件清零总次数(包括总清及分项清)
//3BYTE 事件清零总次数
//1BYTE 保留
//上1次
//6BYTE 发生时刻
//4BYTE 操作者代码
//4BYTE 事件清零数据标识码
//上2次
//...
//上10次
#define ADDR_MeterEvent_End     ADDR_03300300+4+(14*10)
//电表事件记录结束--------------------------------------------------------------------------------------


//电表清0记录------------------------------------------------------------------------------------------
#define ADDR_MeterClr_Start     ADDR_MeterEvent_End
#define ADDR_03300100     ADDR_MeterClr_Start//电表清零记录总是放最后仅在工厂状态时清零
//3BYTE 电表清零总次数
//1BYTE 保留
//上1次
//6BYTE 发生时刻
//4BYTE 操作者代码
//4BYTE 电表清零前正向有功总电能
//4BYTE 电表清零前反向有功总电能
//4BYTE 电表清零前第一象限无功总电能
//4BYTE 电表清零前第二象限无功总电能
//4BYTE 电表清零前第三象限无功总电能
//4BYTE 电表清零前第四象限无功总电能
//4BYTE 电表清零前A相正向有功电能
//4BYTE 电表清零前A相反向有功电能
//4BYTE 电表清零前A相第一象限无功电能
//4BYTE 电表清零前A相第二象限无功电能
//4BYTE 电表清零前A相第三象限无功电能
//4BYTE 电表清零前A相第四象限无功电能
//4BYTE 电表清零前B相正向有功电能
//4BYTE 电表清零前B相反向有功电能
//4BYTE 电表清零前B相第一象限无功电能
//4BYTE 电表清零前B相第二象限无功电能
//4BYTE 电表清零前B相第三象限无功电能
//4BYTE 电表清零前B相第四象限无功电能
//4BYTE 电表清零前C相正向有功电能
//4BYTE 电表清零前C相反向有功电能
//4BYTE 电表清零前C相第一象限无功电能
//4BYTE 电表清零前C相第二象限无功电能
//4BYTE 电表清零前C相第三象限无功电能
//4BYTE 电表清零前C相第四象限无功电能
//上2次
//...
//上10次
#define ADDR_07030101     ADDR_03300100+4+(106*10)//密钥更新暂存
//1BYTE 写密钥标志;0=空,1=正在写入,2=写入完成
//4BYTE 操作者代码

//密钥更新块1(接收后倒序)
//4BYTE 4字节密钥信息
	//4字节密钥信息中的第1字节:密钥总条数1-32;当值为0表示无本条无效
	//4字节密钥信息中的第2字节:保留,默认为00
	//4字节密钥信息中的第3字节:密钥编号0-31
	//4字节密钥信息中的第4字节:密钥状态标志位，00测试密钥，01正式密钥
//32BYTE 32字节密钥密文
//密钥密文2
//密钥密文3
//密钥密文4
//4BYTE MAC(接收后倒序)

//...
//密钥更新块N(接收后倒序)
#if IC_MESAM==1
	#define MaxMESAMKeyN     32//最大MESAM密钥条数
#else
	#define MaxMESAMKeyN     0//最大MESAM密钥条数
#endif
#define ADDR_MeterClr_End     (ADDR_07030101+5+(((4*36)+4)*MaxMESAMKeyN))
//电表清0记录结束---------------------------------------------------------------------------------------


//电表曲线----------------------------------------------------------
#define ADDR_MeterCurve_Start     ADDR_MeterClr_End
//存贮格式2:(长度93字节)
//1BYTE 负荷记录模式字
//5BYTE 存储时间年月日时分
//17BYTE 第1类电压电流频率,若标志字节B0=1
//24BYTE 第2类有无功功率,若标志字节B1=1
//8BYTE 第3类功率因数,若标志字节B2=1
//16BYTE 第4类有无功总电能,若标志字节B3=1
//16BYTE 第5类四象限无功总电能,若标志字节B4=1
//6BYTE 第6类当前需量,若标志字节B5=1
#define LEN_MeterCurve     93//每点曲线存贮空间长度
#define ADDR_MeterCurve_End     (ADDR_MeterCurve_Start+(MaxMeterCurveCongeal*LEN_MeterCurve))
//电表曲线结束------------------------------------------------------------------------------------------


//仪表参数扩展
#define ADDR_Meter_EFLASH_Ext_Start     ADDR_MeterCurve_End//仪表参数扩展
#define ADDR_04001501     ADDR_Meter_EFLASH_Ext_Start//主动上报状态字(电能表清零或钱包初始化操作时同时清零,复位主动上报状态字清零,从站在正确响应主站读取“主动上报状态字”命令后,如果30分钟内未收到主站的“复位主动上报状态字”命令则自动清零)
//12byte 主动上报状态字
//96byte 主动上报事件1-n新增次数
//12byte 上次被读取的主动上报状态字(用于自动定时清0)
//96Byte 上次被读取的主动上报事件1-n新增次数(用于自动定时清0)

#define ADDR_Meter_EFLASH_Ext_End     (ADDR_04001501+12+96+12+96)

#define ADDR_Meter_EFLASH_End     (ADDR_Meter_EFLASH_Ext_End)

#endif






